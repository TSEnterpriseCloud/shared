openapi: 3.0.1
info:
  title: TSEnterpriseWebApi - TS Enterprise Service layer
  description: 'WebApi Version Group: v1_IntegrationCO - 155 Endpoint'
  version: v1_IntegrationCO
paths:
  /api/v1/{environment}/CO/AccountingReasonCodeCO/{id}:
    get:
      tags:
        - AccountingReasonCodeCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/AccountingReasonCodeCO:
    get:
      tags:
        - AccountingReasonCodeCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/AccountingReasonCodeCO/validate:
    post:
      tags:
        - AccountingReasonCodeCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingReasonCodeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AccountingReasonCodeCO/validateProperties:
    post:
      tags:
        - AccountingReasonCodeCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AccountingReasonCodeCO/search:
    post:
      tags:
        - AccountingReasonCodeCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/AccountingReasonCodeCO/read:
    post:
      tags:
        - AccountingReasonCodeCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/AgencyCO/{id}:
    get:
      tags:
        - AgencyCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: CodiceBanca
          in: query
          description: CodiceBanca Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - AgencyCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: CodiceBanca
          in: query
          description: CodiceBanca Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - AgencyCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: CodiceBanca
          in: query
          description: CodiceBanca Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - AgencyCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: CodiceBanca
          in: query
          description: CodiceBanca Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgencyCO:
    get:
      tags:
        - AgencyCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - AgencyCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgencyCO/validate:
    post:
      tags:
        - AgencyCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgencyCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgencyCO/validateProperties:
    post:
      tags:
        - AgencyCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgencyCO/search:
    post:
      tags:
        - AgencyCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/AgencyCO/read:
    post:
      tags:
        - AgencyCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: CodiceBanca
          in: query
          description: CodiceBanca Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/AgentCO/{id}:
    get:
      tags:
        - AgentCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - AgentCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - AgentCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - AgentCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgentCO:
    get:
      tags:
        - AgentCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - AgentCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgentCO/validate:
    post:
      tags:
        - AgentCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgentCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgentCO/validateProperties:
    post:
      tags:
        - AgentCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/AgentCO/search:
    post:
      tags:
        - AgentCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/AgentCO/read:
    post:
      tags:
        - AgentCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/BankCO/{id}:
    get:
      tags:
        - BankCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - BankCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/BankCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - BankCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - BankCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/BankCO:
    get:
      tags:
        - BankCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - BankCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/BankCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/BankCO/validate:
    post:
      tags:
        - BankCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/BankCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/BankCO/validateProperties:
    post:
      tags:
        - BankCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/BankCO/search:
    post:
      tags:
        - BankCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BankCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/BankCO/read:
    post:
      tags:
        - BankCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/CompanyBankCO/{id}:
    get:
      tags:
        - CompanyBankCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/CompanyBankCO:
    get:
      tags:
        - CompanyBankCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CompanyBankCO/validate:
    post:
      tags:
        - CompanyBankCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBankCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompanyBankCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CompanyBankCO/validateProperties:
    post:
      tags:
        - CompanyBankCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CompanyBankCO/search:
    post:
      tags:
        - CompanyBankCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CompanyBankCO/read:
    post:
      tags:
        - CompanyBankCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyBankCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/CSBankCO/search:
    post:
      tags:
        - CSBankCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSBankCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CSBankCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CurrencyCO/calculate_exchangerate:
    post:
      tags:
        - CurrencyCO
      summary: Calculation 'Exchange rate'
      description: Currency exchange calculation
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: >-
          Object that contains all the parameters that are used in the
          calculation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateExchangeRateParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CalculateExchangeRateParametersDTO'
        required: true
      responses:
        '200':
          description: If the calculation was done correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateExchangeRateResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CalculateExchangeRateResultDTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CurrencyCO/calculateAmountByCurrency:
    post:
      tags:
        - CurrencyCO
      summary: Calculation of the amount by exchange
      description: Currency exchange calculation
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: >-
          Object containing the parameters necessary for the calculation. If it
          is not passed the exchange will be taken by CG09_TABCAMBI
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateAmountParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CalculateAmountParametersDTO'
        required: true
      responses:
        '200':
          description: Amount resulting from the calculation and the exchange rate used
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateAmountResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CalculateAmountResultDTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/importcurrencyrates:
    post:
      tags:
        - CurrencyCO
      summary: Currency Exchange Import
      description: Currency Exchange Import
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCurrencyRatesInputDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportCurrencyRatesInputDTO'
        required: true
      responses:
        '200':
          description: Result of the import operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/importmonthlyaveragerates:
    post:
      tags:
        - CurrencyCO
      summary: Import of average monthly exchange rates
      description: Import of average monthly exchange rates
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMonthlyAverageRatesInputDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportMonthlyAverageRatesInputDTO'
        required: true
      responses:
        '200':
          description: Result of the import operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/importannualaveragerates:
    post:
      tags:
        - CurrencyCO
      summary: Average annual exchange rates import
      description: Average annual exchange rates import
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAnnualAverageRatesInputDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportAnnualAverageRatesInputDTO'
        required: true
      responses:
        '200':
          description: Result of the import operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/importtimeseriesrates:
    post:
      tags:
        - CurrencyCO
      summary: Import time series exchange rates
      description: Time Series exchange rates import
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportTimeSeriesRatesInputDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportTimeSeriesRatesInputDTO'
        required: true
      responses:
        '200':
          description: Result of the import operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportCurrencyRatesOutputDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/{id}:
    get:
      tags:
        - CurrencyCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - CurrencyCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - CurrencyCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - CurrencyCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO:
    get:
      tags:
        - CurrencyCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - CurrencyCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/validate:
    post:
      tags:
        - CurrencyCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrencyCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/validateProperties:
    post:
      tags:
        - CurrencyCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CurrencyCO/search:
    post:
      tags:
        - CurrencyCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CurrencyCO/read:
    post:
      tags:
        - CurrencyCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/CustomerSupplierCO/{id}/getnewcodscagl:
    post:
      tags:
        - CustomerSupplierCO
      summary: Retrieve a new code for the payment bracket for the customer
      description: Retrieve a new code for the payment bracket for the customer
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNewCodScaglCSPaymentRangeResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetNewCodScaglCSPaymentRangeResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/{id}/chkjointlyheldexist:
    post:
      tags:
        - CustomerSupplierCO
      summary: Check if exist a customer jointly held to selected customer
      description: Check if exist a customer jointly held to selected customer
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsParametersDTO'
        required: true
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/{id}/deleteallcsjointlyheld:
    post:
      tags:
        - CustomerSupplierCO
      summary: Delete all customers jointly held to selected customer
      description: Delete all customers jointly hel to selected customer
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/JointlyHeldCOAlreadyExistsResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/getfirstavailablenumnsprotletterofintent:
    post:
      tags:
        - CustomerSupplierCO
      summary: Retrieve the first available proptocol number for letter of intent
      description: Retrieve the first available proptocol number for letter of intent
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: TODO_DOCUMENTATION
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetFirstAvailableNumNsProtLetterOfIntentParametersDTO
          application/xml:
            schema:
              $ref: >-
                #/components/schemas/GetFirstAvailableNumNsProtLetterOfIntentParametersDTO
        required: true
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetFirstAvailableNumNsProtLetterOfIntentResultDTO
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/GetFirstAvailableNumNsProtLetterOfIntentResultDTO
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/insertsendingletter:
    post:
      tags:
        - CustomerSupplierCO
      summary: Insert letters
      description: Insert letters
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendingLettersToInsertParametersCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendingLettersToInsertParametersCODTO'
        required: true
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingLetterResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendingLetterResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/getdefaultrevenueagency:
    post:
      tags:
        - CustomerSupplierCO
      summary: Retrieve the default revenew agency
      description: Retrieve the default revenew agency
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingLetterResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendingLetterResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/updatevaluesaftergeneratesendingletter:
    post:
      tags:
        - CustomerSupplierCO
      summary: Update the generated letters of intent
      description: Update the generated letters of intent
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParametersCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateParametersCODTO'
        required: true
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateParametersResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateParametersResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/createintegrativedeclaretion:
    post:
      tags:
        - CustomerSupplierCO
      summary: Integrate the letter of intent
      description: Integrate the letter of intent
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrativeDeclarationParametersCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/IntegrativeDeclarationParametersCODTO'
        required: true
      responses:
        '200':
          description: Result of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrativeDeclarationResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/IntegrativeDeclarationResultDTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/getcswitheffectivepaymentcondition:
    post:
      tags:
        - CustomerSupplierCO
      summary: Returns the customer/supplier with the actual payment condition
      description: >-
        Returns the customer/supplier with the actual payment condition, taking
        into account the brackets
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: customer/supplier reading parameters
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CSWithEffectivePaymentConditionParametersDTO
          application/xml:
            schema:
              $ref: >-
                #/components/schemas/CSWithEffectivePaymentConditionParametersDTO
        required: true
      responses:
        '200':
          description: customer/supplier required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/{id}:
    get:
      tags:
        - CustomerSupplierCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - CustomerSupplierCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - CustomerSupplierCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - CustomerSupplierCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO:
    get:
      tags:
        - CustomerSupplierCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - CustomerSupplierCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/validate:
    post:
      tags:
        - CustomerSupplierCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerSupplierCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/validateProperties:
    post:
      tags:
        - CustomerSupplierCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/CustomerSupplierCO/search:
    post:
      tags:
        - CustomerSupplierCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/CustomerSupplierCO/read:
    post:
      tags:
        - CustomerSupplierCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerSupplierCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/GeneralMasterDataCO/getfromcerved:
    post:
      tags:
        - GeneralMasterDataCO
      summary: GetFromCerved
      description: >-
        It allows the creation or simple mapping of a Cerved registry into a
        general registry
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ',') during the execution
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: >-
          Information for mapping and / writing the Cerved registry -> General
          registry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFromCervedParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetFromCervedParametersDTO'
        required: true
      responses:
        '200':
          description: GeneralMasterDataCODTO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
        '400':
          description: If the input parameters are not specified correctly
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If it was not possible to retrieve the Cerved master data or an
            associated general master data already exists (in case of writing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/GeneralMasterDataCO/{id}:
    get:
      tags:
        - GeneralMasterDataCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - GeneralMasterDataCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: warnoverwriteinconsistentvalues
          in: query
          description: >-
            If 'true', inconsistent values will be overwritten during creation
            or update
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - GeneralMasterDataCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - GeneralMasterDataCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: warnoverwriteinconsistentvalues
          in: query
          description: >-
            If 'true', inconsistent values will be overwritten during creation
            or update
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/GeneralMasterDataCO:
    get:
      tags:
        - GeneralMasterDataCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - GeneralMasterDataCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: warnoverwriteinconsistentvalues
          in: query
          description: >-
            If 'true', inconsistent values will be overwritten during creation
            or update
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/GeneralMasterDataCO/validate:
    post:
      tags:
        - GeneralMasterDataCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/GeneralMasterDataCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/GeneralMasterDataCO/validateProperties:
    post:
      tags:
        - GeneralMasterDataCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/GeneralMasterDataCO/search:
    post:
      tags:
        - GeneralMasterDataCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/GeneralMasterDataCO/read:
    post:
      tags:
        - GeneralMasterDataCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/LanguageCO/{id}:
    get:
      tags:
        - LanguageCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - LanguageCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - LanguageCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - LanguageCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/LanguageCO:
    get:
      tags:
        - LanguageCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - LanguageCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/LanguageCO/validate:
    post:
      tags:
        - LanguageCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/LanguageCO/validateProperties:
    post:
      tags:
        - LanguageCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/LanguageCO/search:
    post:
      tags:
        - LanguageCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/LanguageCO/read:
    post:
      tags:
        - LanguageCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/NationCO/{id}:
    get:
      tags:
        - NationCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - NationCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/NationCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - NationCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - NationCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/NationCO:
    get:
      tags:
        - NationCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - NationCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/NationCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/NationCO/validate:
    post:
      tags:
        - NationCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/NationCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/NationCO/validateProperties:
    post:
      tags:
        - NationCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/NationCO/search:
    post:
      tags:
        - NationCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/NationCO/read:
    post:
      tags:
        - NationCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/OfficeCO/{id}:
    get:
      tags:
        - OfficeCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - OfficeCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - OfficeCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - OfficeCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/OfficeCO:
    get:
      tags:
        - OfficeCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - OfficeCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/OfficeCO/validate:
    post:
      tags:
        - OfficeCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/OfficeCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/OfficeCO/validateProperties:
    post:
      tags:
        - OfficeCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/OfficeCO/search:
    post:
      tags:
        - OfficeCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/OfficeCO/read:
    post:
      tags:
        - OfficeCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/OfficeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/PaymentTermCO/get_from_code:
    post:
      tags:
        - PaymentTermCO
      summary: Retrieve the payment term from code
      description: Retrieve the payment term from code
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Input parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodePaymentTermCOParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CodePaymentTermCOParametersDTO'
        required: true
      responses:
        '200':
          description: If operation was made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
        '400':
          description: In case of incorrect parameters in the request
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/calculate_sum:
    post:
      tags:
        - PaymentTermCO
      summary: Calculate the sum of the percentages
      description: Calculate the sum of the percentages
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Parameters of the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermDetailCOParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTermDetailCOParametersDTO'
        required: true
      responses:
        '200':
          description: If operation was made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermDetailCalculationResultCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermDetailCalculationResultCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/PaymentTermDuplication:
    post:
      tags:
        - PaymentTermCO
      summary: Duplication of Payment Term
      description: Duplication of Payment Term
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Parameters for duplication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermDuplicationParametersCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTermDuplicationParametersCODTO'
        required: true
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In caso di errori nelle logiche di business: il contenuto della
            risposta contiene i messaggi di validazione prodotti
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/{id}:
    get:
      tags:
        - PaymentTermCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - PaymentTermCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - PaymentTermCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - PaymentTermCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO:
    get:
      tags:
        - PaymentTermCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - PaymentTermCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/validate:
    post:
      tags:
        - PaymentTermCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTermCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/validateProperties:
    post:
      tags:
        - PaymentTermCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/PaymentTermCO/search:
    post:
      tags:
        - PaymentTermCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/PaymentTermCO/read:
    post:
      tags:
        - PaymentTermCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentTermCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/SectionalMasterDataCO/Get_SectionalMasterDataProposal:
    post:
      tags:
        - SectionalMasterDataCO
      summary: Proposes the sectional
      description: >-
        Proposes the sectional based on the parameters passed in the request. If
        requested, it also returns the relative protocol. If they exist, it also
        returns the data relating to the self-invoice.
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: >-
          Object that contains all the parameters that are used in the
          calculation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataProposalParametersDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataProposalParametersDTO'
        required: true
      responses:
        '200':
          description: If the calculation was done correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataProposalResultDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataProposalResultDTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/SectionalMasterDataCO/{id}:
    get:
      tags:
        - SectionalMasterDataCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - SectionalMasterDataCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - SectionalMasterDataCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - SectionalMasterDataCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/SectionalMasterDataCO:
    get:
      tags:
        - SectionalMasterDataCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - SectionalMasterDataCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/SectionalMasterDataCO/validate:
    post:
      tags:
        - SectionalMasterDataCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SectionalMasterDataCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/SectionalMasterDataCO/validateProperties:
    post:
      tags:
        - SectionalMasterDataCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/SectionalMasterDataCO/search:
    post:
      tags:
        - SectionalMasterDataCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/SectionalMasterDataCO/read:
    post:
      tags:
        - SectionalMasterDataCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: DittaCg18
          in: query
          description: DittaCg18 Mandatory to execute current action
          required: true
          style: form
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionalMasterDataCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
  /api/v1/{environment}/CO/VatCodeCO/{id}/verifica_movimentazione_progressivi:
    post:
      tags:
        - VatCodeCO
      summary: Check Progressive Handling
      description: Check if the specified VAT code has moved the progressives
      parameters:
        - name: id
          in: path
          description: >-
            The id of the VAT code for which to check the movement of the
            progressives
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: >-
            If the check has been carried out correctly: the returned values are
            '{0}' in the case of progressives moved, or '{1}' in the case of
            progressives NOT moved
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/VerificaMovimentazioneProgressiviResultDTO
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/VerificaMovimentazioneProgressiviResultDTO
        '400':
          description: In case of VAT code not found
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In case of errors in the business logic: the content of the response
            contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO/VatCodeDuplication:
    post:
      tags:
        - VatCodeCO
      summary: Duplication of VatCode
      description: Duplication of VatCode
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Parameters for duplication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatCodeDuplicationParametersCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/VatCodeDuplicationParametersCODTO'
        required: true
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            In caso di errori nelle logiche di business: il contenuto della
            risposta contiene i messaggi di validazione prodotti
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO/{id}:
    get:
      tags:
        - VatCodeCO
      summary: Get by ID
      description: Get an object of type corresponding the requested id
      parameters:
        - name: id
          in: path
          description: Id to get the object
          required: true
          style: simple
          schema:
            type: string
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
    put:
      tags:
        - VatCodeCO
      summary: Update
      description: Updating an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been updated: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been updated due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    delete:
      tags:
        - VatCodeCO
      summary: Delete
      description: 'Deleting object of type '
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: If object has been deleted
        '400':
          description: >-
            if object has not been deleted: the content response contains the
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been deleted due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
    patch:
      tags:
        - VatCodeCO
      summary: Update partial
      description: Patching an object of type
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: force
          in: query
          description: The warning/s code to bypass (separated by ‘,’) during the execution
          style: form
          schema:
            type: string
        - name: _op
          in: query
          description: Set 'reload', if you want the DTO updated in the response request
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to patch
        content:
          application/json:
            schema: {}
          application/xml:
            schema: {}
        required: true
      responses:
        '200':
          description: If object has been updated
        '400':
          description: >-
            If the object has not been patched: the content response contains
            the validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
        '409':
          description: >-
            If object has not been patched due to business rules violation: the
            content response contains the validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO:
    get:
      tags:
        - VatCodeCO
      summary: Get new
      description: Get an empty object of type corresponding
      parameters:
        - name: _op
          in: query
          description: The value must be 'new'
          required: true
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      responses:
        '200':
          description: The empty object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
    post:
      tags:
        - VatCodeCO
      summary: Create
      description: Creating new object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
        required: true
      responses:
        '201':
          description: If object has been created
        '400':
          description: >-
            If the object has not been created: the content response contains
            validation messages
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object has not been created due to business rules violation: the
            content response contains validation messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO/validate:
    post:
      tags:
        - VatCodeCO
      summary: Validate
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Object of type to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/VatCodeCODTO'
        required: true
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO/validateProperties:
    post:
      tags:
        - VatCodeCO
      summary: Validation of one on more properties of Type
      description: Validation of object of type
      parameters:
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: ' - One or more key-value pairs where the key is the DTO property name and the value is value to validate * REQUIRED<br> - The id of an existing object to validate properties, or '''' if the object does not exist yet <br>'
        content:
          application/json:
            schema:
              type: string
              properties:
                propertyName=Value&id=Value:
                  type: string
                  format: string
              example: propertyName=Value&id=Value
      responses:
        '200':
          description: >-
            If object is VALID: the content response does NOT contain validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
        '400':
          description: If no object to validate was supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '409':
          description: >-
            If object is NOT VALID: the content response contains validation
            messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateDTO'
  /api/v1/{environment}/CO/VatCodeCO/search:
    post:
      tags:
        - VatCodeCO
      summary: Search
      description: Search among object of type
      parameters:
        - name: loadEntireDomain
          in: query
          description: Specify 'loadEntireDomain=true' if you want all the aggregate
          style: form
          schema:
            type: string
        - name: getTotalCount
          in: query
          description: >-
            Specify 'getTotalCount=true' if you want the total number of
            elements
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchDTO'
        required: true
      responses:
        '200':
          description: The list of object of type as result of search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
        '400':
          description: If the search criteria is not supplied
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
  /api/v1/{environment}/CO/VatCodeCO/read:
    post:
      tags:
        - VatCodeCO
      summary: Read
      description: Read among object of type
      parameters:
        - name: dlevel
          in: query
          description: Serialization level
          style: form
          schema:
            type: string
        - name: dlevelkey
          in: query
          description: Serialization level key
          style: form
          schema:
            type: string
        - name: environment
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: Authorization-Scope
          in: header
          description: >-
            The environment where this operation will be executed. This must
            match with the environment in the url.
          required: true
          style: simple
          schema:
            type: string
        - name: company
          in: query
          description: Company code
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: >-
            Application user (mandatory if the WebApi user does not have any
            mapped application user)
          style: form
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Example for multilanguage
          style: simple
          schema:
            enum:
              - it-IT
              - en-GB
            type: string
            default: it-IT
      requestBody:
        description: Search criteria to apply
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SearchElementDTO'
        required: true
      responses:
        '200':
          description: The object of type requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/VatCodeCODTO'
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden access
        '404':
          description: If object not found
components:
  schemas:
    AccountingReasonCodeCODTO:
      required:
        - caualias
        - codice
        - flgAcconto
        - flgAutofatt
        - flgCaufissa
        - flgComp
        - flgDatiassegno
        - flgEconto
        - flgGestsez
        - flgInsoluti
        - flgIvaedit
        - flgPortaf
        - flgSubforni
        - indGestec
        - indGestfattproforma
        - indMonofasersm
        - indProteo360
        - indScadfattproforma
        - indTipomov
        - indTipooper
        - indTiporeg
        - tipoeff
      type: object
      properties:
        caualias:
          minLength: 1
          type: string
          description: CG33_CAUALIAS - Alias per ricerca causale contabile
        causalecoll:
          type: string
          description: CG33_CAUSALECOLL - Causale collegata
          nullable: true
        causalecolltype:
          type: number
          description: CG33_CAUSALECOLLTYPE - Causalecolltype
          format: double
          nullable: true
        causaleiva:
          type: string
          description: CG33_CAUSALEIVA - Causale IVA
          nullable: true
        codice:
          minLength: 1
          type: string
          description: CG33_CODICE - Codice causale
        descr:
          type: string
          description: CG33_DESCR - Descrizione
          nullable: true
        flgAcconto:
          type: number
          description: CG33_FLGACCONTO - Causale acconto
          format: double
        flgAgviag:
          type: number
          description: CG33_FLGAGVIAG - Agenzie viaggio
          format: double
          nullable: true
        flgAutofatt:
          type: number
          description: CG33_FLGAUTOFATT - FlgAutofatt
          format: double
        flgCaufissa:
          type: number
          description: CG33_FLGCAUFISSA - Causale fissa
          format: double
        flgComp:
          type: number
          description: CG33_FLGCOMP - Competenza esercizio precedente
          format: double
        flgDatiassegno:
          type: number
          description: CG33_FLGDATIASSEGNO - Richiesta riferimenti assegno
          format: double
        flgEconto:
          type: number
          description: CG33_FLGECONTO - Gest. E/Conto
          format: double
        flgFattdiff:
          type: number
          description: CG33_FLGFATTDIFF - Rich. data comp. IVA
          format: double
          nullable: true
        flgGestsez:
          type: number
          description: CG33_FLGGESTSEZ - Protocolla movimento
          format: double
        flgInsoluti:
          type: number
          description: CG33_FLGINSOLUTI - FlgInsoluti
          format: double
        flgIvaedit:
          type: number
          description: CG33_FLGIVAEDIT - IVA editoria
          format: double
        flgPortaf:
          type: number
          description: CG33_FLGPORTAF - Gest. portafoglio
          format: double
        flgProtsemp:
          type: number
          description: CG33_FLGPROTSEMP - Nr. docum. semplificata
          format: double
          nullable: true
        flgSubforni:
          type: number
          description: CG33_FLGSUBFORNI - Subfornitura
          format: double
        idCg0z:
          type: integer
          description: CG33_ID_CG0Z - IdCg0z
          format: int64
          nullable: true
        idCgd1:
          type: number
          description: CG33_ID_CGD1 - IdCgd1
          format: double
          nullable: true
        idmediaCg99:
          type: number
          description: CG33_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idprov:
          type: number
          description: CG33_IDPROV - IdProv (Required only in PUT/PATCH)
          format: double
          nullable: true
        indCaubenius:
          type: number
          description: CG33_INDCAUBENIUS - Regime del margine
          format: double
          nullable: true
        indDaav:
          type: integer
          description: CG33_INDDAAV - Segno
          format: int32
          nullable: true
        indGestec:
          type: number
          description: CG33_INDGESTEC - Gest. E/Conto
          format: double
        indGestfattproforma:
          type: integer
          description: CG33_INDGESTFATTPROFORMA - Gestione fatture proforma
          format: int32
        indMonofasersm:
          type: number
          description: CG33_INDMONOFASERSM - Operazioni monofase RSM
          format: double
        indProteo360:
          type: number
          description: CG33_INDPROTEO360 - Aggancio alla procedura Proteo 360
          format: double
        indScadfattproforma:
          type: integer
          description: CG33_INDSCADFATTPROFORMA - Scadenze in fatture proforma
          format: int32
        indTipomov:
          type: integer
          description: CG33_INDTIPOMOV - Tipo operazione
          format: int32
        indTipooper:
          type: number
          description: CG33_INDTIPOOPER - IndTipooper
          format: double
        indTiporeg:
          type: integer
          description: CG33_INDTIPOREG - Tipo registro
          format: int32
        rowversion:
          type: string
          description: CG33_ROWVERSION - Rowversion
          format: byte
          nullable: true
        tipoeff:
          type: integer
          description: CG33_TIPOEFF - Tipo effetti
          format: int32
        classification:
          $ref: '#/components/schemas/AccountingReasonCodeClassificationCODTO'
        vatCodeReason:
          $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        vatCodeReasonConnect:
          $ref: '#/components/schemas/AccountingReasonCodeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG33_TABCAU - AccountingReasonCodeCO<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    AccountingReasonCodeClassificationCODTO:
      required:
        - tipologia
      type: object
      properties:
        descr:
          type: string
          description: CGD1_DESCR - Descr
          nullable: true
        id:
          type: number
          description: CGD1_ID - Id (Required only in PUT/PATCH)
          format: double
          nullable: true
        idmediaCg99:
          type: number
          description: CGD1_IDMEDIA_CG99 - IdmediaCg99
          format: double
          nullable: true
        tipologia:
          minLength: 1
          type: string
          description: CGD1_TIPOLOGIA - Tipologia
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CGD1_TIPOCAUSALE - AccountingReasonCodeClassificationCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    AddressCODTO:
      required:
        - guid
      type: object
      properties:
        codiceCg16:
          type: integer
          format: int32
        cap:
          type: string
          description: CG1J_CAP - Cap
          nullable: true
        cellnum:
          type: string
          description: CG1J_CELLNUM - Cellulare
          nullable: true
        citta:
          type: string
          description: CG1J_CITTA - Città
          nullable: true
        codicesfed:
          type: string
          description: CG1J_CODICESFED - Stato federato
          nullable: true
        codlinguaMg52:
          type: string
          description: CG1J_CODLINGUA_MG52 - Codice lingua
          nullable: true
        comanaCg01:
          type: string
          description: CG1J_COMANA_CG01 - ComanaCg01
          nullable: true
        contea:
          type: string
          description: CG1J_CONTEA - Contea
          nullable: true
        datacre:
          type: string
          description: CG1J_DATACRE - Data creazione
          format: date-time
          nullable: true
        datamod:
          type: string
          description: CG1J_DATAMOD - Data modifica
          format: date-time
          nullable: true
        edificio:
          type: string
          description: CG1J_EDIFICIO - Edificio
          nullable: true
        email:
          type: string
          description: CG1J_EMAIL - Email
          nullable: true
        emailPec:
          type: string
          description: CG1J_EMAIL_PEC - Email pec
          nullable: true
        fax:
          type: string
          description: CG1J_FAX - Fax
          nullable: true
        frazione:
          type: string
          description: CG1J_FRAZIONE - Frazione
          nullable: true
        guid:
          type: string
          description: CG1J_GUID - GUID
          format: uuid
        id:
          type: integer
          description: CG1J_ID - ID (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idTeamportal:
          type: integer
          description: CG1J_ID_TEAMPORTAL - IdTeamportal
          format: int64
          nullable: true
        indirizzocomp:
          type: string
          description: CG1J_INDIRIZZOCOMP - Indirizzo completo
          nullable: true
        indirizzocomp2:
          type: string
          description: CG1J_INDIRIZZOCOMP2 - Indirizzo completo aggiuntivo
          nullable: true
        indirizzoex:
          type: string
          description: CG1J_INDIRIZZOEX - Indirizzo esteso
          nullable: true
        indweb:
          type: string
          description: CG1J_INDWEB - Indirizzo web
          nullable: true
        latitudine:
          type: number
          description: CG1J_LATITUDINE - Latitudine
          format: double
          nullable: true
        longitudine:
          type: number
          description: CG1J_LONGITUDINE - Longitudine
          format: double
          nullable: true
        numciv:
          type: string
          description: CG1J_NUMCIV - Numero civico
          nullable: true
        precisione:
          type: string
          description: CG1J_PRECISIONE - Precisione
          nullable: true
        presso:
          type: string
          description: CG1J_PRESSO - c/o - Edificio
          nullable: true
        pv:
          type: string
          description: CG1J_PV - PV
          nullable: true
        ragsoc:
          type: string
          description: CG1J_RAGSOC - Ragione sociale
          nullable: true
        ragsocex:
          type: string
          description: CG1J_RAGSOCEX - Ragsocex
          nullable: true
        rifindirizzo:
          type: string
          description: CG1J_RIFINDIRIZZO - Rifindirizzo
          nullable: true
        risregione:
          type: string
          description: CG1J_RISREGIONE - Risregione
          nullable: true
        risstato:
          type: string
          description: CG1J_RISSTATO - Risstato
          nullable: true
        riswarning:
          type: string
          description: CG1J_RISWARNING - Riswarning
          nullable: true
        riszip:
          type: string
          description: CG1J_RISZIP - Riszip
          nullable: true
        statoCg07:
          type: number
          description: CG1J_STATO_CG07 - StatoCg07
          format: double
          nullable: true
        statofed:
          type: string
          description: CG1J_STATOFED - Stato federato
          nullable: true
        telefono:
          type: string
          description: CG1J_TELEFONO - Telefono
          nullable: true
        tipologia:
          type: string
          description: CG1J_TIPOLOGIA - Tipologia
          nullable: true
        via:
          type: string
          description: CG1J_VIA - Indirizzo - N.civico
          nullable: true
        addressesType:
          type: array
          items:
            $ref: '#/components/schemas/AddressTypeCODTO'
          nullable: true
        federalStateViewCO:
          $ref: '#/components/schemas/FederalStateViewCODTO'
        statoEst:
          $ref: '#/components/schemas/NationCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG1J_INDIRIZZI - AddressCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    AddressTypeCODTO:
      required:
        - idCG1J
        - tipo
      type: object
      properties:
        id:
          type: integer
          description: CG1K_ID - ID (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idCG1J:
          type: integer
          description: CG1K_ID_CG1J - IdCG1J
          format: int64
        tipo:
          type: integer
          description: CG1K_TIPO - Tipo
          format: int32
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG1K_INDANAG - AddressTypeCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    AgencyCODTO:
      required:
        - bankCO
        - codBanca
        - codice
      type: object
      properties:
        codBanca:
          type: number
          description: CG13_BANCA_CG12 - CodiceBanca
          format: double
        codice:
          type: number
          description: CG13_CODCAB - CodiceAgenziaCO
          format: double
        descrizione:
          type: string
          description: CG13_DESCR - Descrizione
          nullable: true
        localita:
          type: string
          description: CG13_LOCALITA - Localita
          nullable: true
        prov:
          type: string
          description: CG13_PROV - Prov
          nullable: true
        bankCO:
          $ref: '#/components/schemas/BankCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG13_AGENZIE - AgencyCO<br>Proprietà
        chiave:<ul><li><b>CodBanca</b></li><li><b>Codice</b></li></ul>
    AgentCODTO:
      required:
        - agente
        - dittaCg18
        - dmsPublishedEntityFW
        - generalMasterDataCO
        - guid
      type: object
      properties:
        agente:
          minLength: 1
          type: string
          description: MG17_AGENTE - Agente
        dittaCg18:
          type: number
          description: MG17_DITTA_CG18 - Ditta
          format: double
        guid:
          type: string
          description: MG17_GUID - GUID
          format: uuid
        idagente:
          type: integer
          description: MG17_IDAGENTE - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        idExtendedAttributeEntity:
          type: integer
          format: int32
        idExtendedAttributeSubEntity:
          type: integer
          format: int32
        dmsPublishedEntityFW:
          $ref: '#/components/schemas/DMSPublishedEntityFWDTO'
        generalMasterDataCO:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG17_AGENTI - Agente<br>Proprietà
        chiave:<ul><li><b>Idagente</b></li></ul>
    AreaCODTO:
      required:
        - codiceAreaMG
        - dittaCg18
        - macroareaMg07
        - tipocfMg07
      type: object
      properties:
        codiceAreaMG:
          minLength: 1
          type: string
          description: MG08_AREA - Area
        descrarea:
          type: string
          description: MG08_DESCRAREA - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG08_DITTA_CG18 - Ditta
          format: double
        macroareaMg07:
          minLength: 1
          type: string
          description: MG08_MACROAREA_MG07 - Macroarea
        tipocfMg07:
          type: number
          description: MG08_TIPOCF_MG07 - Tipo Cliente / Fornitore
          format: double
        zone:
          type: array
          items:
            $ref: '#/components/schemas/ZoneCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG08_AREE - AreaCO<br>Proprietà
        chiave:<ul><li><b>CodiceAreaMG</b></li><li><b>DittaCg18</b></li><li><b>MacroareaMg07</b></li><li><b>TipocfMg07</b></li></ul>
    BankCODTO:
      required:
        - codiceBanca
      type: object
      properties:
        codBicswift:
          type: string
          description: CG12_CODBICSWIFT - Codice BIC SWIFT
          nullable: true
        codiceBanca:
          type: number
          description: CG12_BANCA - Comm.
          format: double
        descrizione:
          type: string
          description: CG12_DESCR - Descrizione
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG12_BANCHE - Banca<br>Proprietà
        chiave:<ul><li><b>CodiceBanca</b></li></ul>
    CIGCUPMasterDataCODTO:
      required:
        - cig
        - flgAttivo
        - indTipocontr
        - indTipodocrif
      type: object
      properties:
        cig:
          minLength: 1
          type: string
          description: CO1H_CIG - Cig
        cup:
          type: string
          description: CO1H_CUP - Cup
          nullable: true
        descrizione:
          type: string
          description: CO1H_DESCRIZIONE - Descrizione
          nullable: true
        docrifData:
          type: string
          description: CO1H_DOCRIF_DATA - DocrifData
          format: date-time
          nullable: true
        docrifId:
          type: string
          description: CO1H_DOCRIF_ID - DocrifId
          nullable: true
        flgAttivo:
          type: number
          description: CO1H_FLGATTIVO - FlgAttivo
          format: double
        id:
          type: integer
          description: CO1H_ID - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        indTipocontr:
          type: integer
          description: CO1H_INDTIPOCONTR - IndTipocontr
          format: int32
        indTipodocrif:
          type: integer
          description: CO1H_INDTIPODOCRIF - IndTipodocrif
          format: int32
        rowversion:
          type: string
          description: CO1H_ROWVERSION - Rowversion
          format: byte
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CO1H_CIGCUP - CIGCUPMasterDataCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CSAccountingIndexCODTO:
      required:
        - codCat
        - dittaCg18
        - tipocfCg44
      type: object
      properties:
        codCat:
          minLength: 1
          type: string
          description: MGA3_CODCAT -  Codice
        descr:
          type: string
          description: MGA3_DESCR - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MGA3_DITTA_CG18 - Ditta
          format: double
        tipocfCg44:
          type: number
          description: MGA3_TIPOCF_CG44 - Tipo cliente fornitore
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MGA3_CATCPARCF - Indice contabile<br>Proprietà
        chiave:<ul><li><b>CodCat</b></li><li><b>DittaCg18</b></li><li><b>TipocfCg44</b></li></ul>
    CSBankCODTO:
      required:
        - ccggval
        - cliforCg44
        - dittaCg18
        - flgPref
        - flgPrefIncassi
        - indTipoop
        - progR
        - tipocfCg44
      type: object
      properties:
        bban:
          type: string
          description: MG35_BBAN - BBAN
          nullable: true
        bicbancaestera:
          type: string
          description: MG35_BICBANCAESTERA - BIC
          nullable: true
        ccaddetto:
          type: string
          description: MG35_CCADDETTO - Addetto
          nullable: true
        ccdesagenz:
          type: string
          description: MG35_CCDESAGENZ - Ccdesagenz
          nullable: true
        ccforn:
          type: string
          description: MG35_CCFORN - Conto corrente
          nullable: true
        ccfornfactor:
          type: number
          description: MG35_CCFORNFACTOR - Ccfornfactor
          format: double
          nullable: true
        ccfornfactoridCg44:
          type: integer
          description: MG35_CCFORNFACTORID_CG44 - CcfornfactoridCg44
          format: int32
          nullable: true
        ccggval:
          type: number
          description: MG35_CCGGVAL - Giorni di valuta
          format: double
        cliforCg44:
          type: number
          description: MG35_CLIFOR_CG44 - CliforCg44
          format: double
        codiceCg07:
          type: number
          description: MG35_CODICE_CG07 - Nazione
          format: double
          nullable: true
        dittaCg18:
          type: number
          description: MG35_DITTA_CG18 - Ditta
          format: double
        flgPref:
          type: number
          description: MG35_FLGPREF - Preferenziale pagamenti
          format: double
        flgPrefIncassi:
          type: integer
          description: MG35_FLGPREF_INCASSI - Preferenziale incassi
          format: int32
        iban:
          type: string
          description: MG35_IBAN - IBAN
          nullable: true
        id:
          type: integer
          description: MG35_ID - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        idbancaestera:
          type: string
          description: MG35_IDBANCAESTERA - Idbancaestera
          nullable: true
        idcontratto:
          type: string
          description: MG35_IDCONTRATTO - Idcontratto
          nullable: true
        idsuccursale:
          type: number
          description: MG35_IDSUCCURSALE - Idsuccursale
          format: double
          nullable: true
        indTipoop:
          type: number
          description: MG35_INDTIPOOP - Tipo operazione
          format: double
        locbancaestera:
          type: string
          description: MG35_LOCBANCAESTERA - Località Banca estera
          nullable: true
        nomebancaestera:
          type: string
          description: MG35_NOMEBANCAESTERA - Nome banca
          nullable: true
        progR:
          type: integer
          description: MG35_PROGR - Progr.
          format: int32
        tipobanca:
          type: number
          description: MG35_TIPOBANCA - Tipobanca
          format: double
          nullable: true
        tipocfCg44:
          type: number
          description: MG35_TIPOCF_CG44 - Tipo Cliente / Fornitore
          format: double
        agencyCO:
          $ref: '#/components/schemas/AgencyCODTO'
        customerSupplierCO:
          $ref: '#/components/schemas/CustomerSupplierCODTO'
        nationCO:
          $ref: '#/components/schemas/NationCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: MG35_CLIFORCC - CSBankCO<br>Proprietà chiave:<ul><li><b>Id</b></li></ul>
    CSCompanyBankCODTO:
      required:
        - cliforCg44
        - companyBankCO
        - dittaCg18
        - flgPref
        - progR
        - progREf08
        - tipocfCg44
      type: object
      properties:
        cliforCg44:
          type: number
          description: MG2H_CLIFOR_CG44 - Codice Cliente / Fornitore
          format: double
        dittaCg18:
          type: number
          description: MG2H_DITTA_CG18 - Ditta
          format: double
        flgPref:
          type: integer
          description: MG2H_FLGPREF - Banca preferenziale
          format: int32
        id:
          type: integer
          description: MG2H_ID - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        progR:
          type: integer
          description: MG2H_PROGR - PROGR
          format: int32
        progREf08:
          type: number
          description: MG2H_PROGR_EF08 - Codice banca aziendale
          format: double
        rowversion:
          type: string
          description: MG2H_ROWVERSION - Rowversion
          format: byte
          nullable: true
        tipocfCg44:
          type: number
          description: MG2H_TIPOCF_CG44 - Tipo cliente fornitore
          format: double
        companyBankCO:
          $ref: '#/components/schemas/CompanyBankCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG2H_CLIFORBANCHEAZ - CSCompanyBankCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CSHistorySddCODTO:
      required:
        - datavar
        - id
      type: object
      properties:
        codBicswift:
          type: string
          description: MG2E_CODBICSWIFT - BICSWIFT
          nullable: true
        codClideb:
          type: string
          description: MG2E_CODCLIDEB - Codice debitore
          nullable: true
        codIndiv:
          type: number
          description: MG2E_CODINDIV - Codice individuale
          format: double
          nullable: true
        datavar:
          type: string
          description: MG2E_DATAVAR - Data
          format: date-time
        id:
          type: integer
          description: MG2E_ID - Id
          format: int32
        indStorno:
          type: number
          description: MG2E_INDSTORNO - Facoltà di storno
          format: double
          nullable: true
        indTipoinc:
          type: integer
          description: MG2E_INDTIPOINC - Tipo seq. incasso
          format: int32
          nullable: true
        indTiposdd:
          type: number
          description: MG2E_INDTIPOSDD - Tipo SDD
          format: double
          nullable: true
        ridiban:
          type: string
          description: MG2E_RIDIBAN - IBAN
          nullable: true
        soggtitibanCg16:
          type: integer
          description: MG2E_SOGGTITIBAN_CG16 - Sogg. titolare IBAN
          format: int32
          nullable: true
        tipologia:
          type: number
          description: MG2E_TIPOLOGIA - Tipologia
          format: double
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG2E_STORICORID - CSHistorySddCO<br>Proprietà
        chiave:<ul><li><b>Datavar</b></li><li><b>Id</b></li></ul>
    CSInfoCODTO:
      required:
        - cliforCg44
        - datacreaz
        - dataultvar
        - dittaCg18
        - flgEstrpayline
        - flgSpbol
        - flgSpeinc
        - flgTaxliable
        - indClibloc
        - indrottcig
        - indSpesecum
        - tipocfCg44
      type: object
      properties:
        area:
          type: string
          description: MG19_AREA - Codice Area
          nullable: true
        areanielsenMg0e:
          type: string
          description: MG19_AREANIELSEN_MG0E - Area Nielsen
          nullable: true
        bacsaccountno:
          type: integer
          description: MG19_BACSACCOUNTNO - Codice BACS
          format: int32
          nullable: true
        categ:
          type: string
          description: MG19_CATEG - Codice Categoria
          nullable: true
        cliforCg44:
          type: number
          description: MG19_CLIFOR_CG44 - Codice cliente
          format: double
        codIclfatt:
          type: number
          description: MG19_CODICLFATT - Cliente fatturazione
          format: double
          nullable: true
        codLivbloc:
          type: string
          description: MG19_CODLIVBLOC - Codice Blocco
          nullable: true
        codRifalf:
          type: string
          description: MG19_CODRIFALF - Codice di riferimento alfanumerico
          nullable: true
        codRifnum:
          type: number
          description: MG19_CODRIFNUM - Codice di riferimento numerico
          format: double
          nullable: true
        codRischioMg2a:
          type: string
          description: MG19_CODRISCHIO_MG2A - Codice rischio
          nullable: true
        datablocco:
          type: string
          description: MG19_DATABLOCCO - Data blocco
          format: date-time
          nullable: true
        datacreaz:
          type: string
          description: MG19_DATACREAZ - Data creazione
          format: date-time
        datadismis:
          type: string
          description: MG19_DATADISMIS - Data dismissione
          format: date-time
          nullable: true
        datarischio:
          type: string
          description: MG19_DATARISCHIO - Data dell'attivazione controllo rischio
          format: date-time
          nullable: true
        dataultvar:
          type: string
          description: MG19_DATAULTVAR - Data ultima variazione
          format: date-time
        dittaCg18:
          type: number
          description: MG19_DITTA_CG18 - Ditta
          format: double
        fidoaziendale:
          type: number
          description: MG19_FIDOAZIENDALE - Fido aziendale
          format: double
          nullable: true
        fidofactoring:
          type: number
          description: MG19_FIDOFACTORING - Importo fido assicurazione credito
          format: double
          nullable: true
        fidolivello1:
          type: number
          description: MG19_FIDOLIVELLO1 - Fido liv. 1
          format: double
          nullable: true
        fidolivello2:
          type: number
          description: MG19_FIDOLIVELLO2 - Fido liv.2
          format: double
          nullable: true
        finchargerterms:
          type: string
          description: MG19_FINCHARGERTERMS - Termini di addebito
          nullable: true
        flgEstrpayline:
          type: number
          description: MG19_FLGESTRPAYLINE - Estrazione Payline
          format: double
        flgSpbol:
          type: number
          description: MG19_FLGSPBOL - Spese bolli
          format: double
        flgSpeinc:
          type: number
          description: MG19_FLGSPEINC - Spese incasso
          format: double
        flgTaxliable:
          type: integer
          description: MG19_FLGTAXLIABLE - Tax Liable
          format: int32
        idmediaCg99:
          type: number
          description: MG19_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indClibloc:
          type: number
          description: MG19_INDCLIBLOC - Tipo blocco
          format: double
        indGesfido:
          type: number
          description: MG19_INDGESFIDO - Indicatore gestione fido
          format: double
          nullable: true
        indrottcig:
          type: number
          description: MG19_INDROTTCIG - Indrottcig
          format: double
        indSpesecum:
          type: number
          description: MG19_INDSPESECUM - Cumulo sp.bolli/incasso
          format: double
        irs1099:
          type: string
          description: MG19_IRS1099 - IRSS1099 Code
          nullable: true
        lastchange:
          type: string
          description: MG19_LASTCHANGE - Data ultima variazione
          format: date-time
          nullable: true
        linguaMg52:
          type: string
          description: MG19_LINGUA_MG52 - Codice lingua
          nullable: true
        macroarea:
          type: string
          description: MG19_MACROAREA - Codice Macroarea
          nullable: true
        macrocat:
          type: string
          description: MG19_MACROCAT - Codice Macrocategoria
          nullable: true
        notebloc:
          type: string
          description: MG19_NOTEBLOC - Note blocco
          nullable: true
        raggcrf3:
          type: string
          description: MG19_RAGGCRF3 - Codice raggrupamento Clienti/Fornitori 3
          nullable: true
        raggrcf1:
          type: string
          description: MG19_RAGGRCF1 - Codice raggruppamento Clienti/Fornitori 1
          nullable: true
        raggrcf2:
          type: string
          description: MG19_RAGGRCF2 - Codice raggruppamento Clienti/Fornitori 2
          nullable: true
        regimeiva:
          type: string
          description: MG19_REGIMEIVA - Regime IVA
          nullable: true
        reminderterms:
          type: string
          description: MG19_REMINDERTERMS - Termini di sollecito
          nullable: true
        scaglspbanc:
          type: number
          description: MG19_SCAGLSPBANC - Codice della tabella bolli e spese incasso
          format: double
          nullable: true
        sottocat:
          type: string
          description: MG19_SOTTOCAT - Codice Sottocategoria
          nullable: true
        taxareaNv01:
          type: string
          description: MG19_TAXAREA_NV01 - Tax area
          nullable: true
        taxexemptionno:
          type: string
          description: MG19_TAXEXEMPTIONNO - USA-numero esenzione sales tax
          nullable: true
        tipocfCg44:
          type: number
          description: MG19_TIPOCF_CG44 - Tipo Cliente/ Fornitore
          format: double
        typeofsupply:
          type: string
          description: MG19_TYPEOFSUPPLY - Tipo di fornitura
          nullable: true
        zona:
          type: string
          description: MG19_ZONA - Codice Zona
          nullable: true
        areaCO:
          $ref: '#/components/schemas/AreaCODTO'
        categoryCO:
          $ref: '#/components/schemas/CategoryCODTO'
        grouping1CO:
          $ref: '#/components/schemas/Grouping1CODTO'
        grouping2CO:
          $ref: '#/components/schemas/Grouping2CODTO'
        grouping3CO:
          $ref: '#/components/schemas/Grouping3CODTO'
        macroAreaCO:
          $ref: '#/components/schemas/MacroAreaCODTO'
        macroCategoryCO:
          $ref: '#/components/schemas/MacroCategoryCODTO'
        subCategoryCO:
          $ref: '#/components/schemas/SubCategoryCODTO'
        zoneCO:
          $ref: '#/components/schemas/ZoneCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG19_CLIFORVA - Classificazione Cliente/Fornitore<br>Proprietà
        chiave:<ul><li><b>CliforCg44</b></li><li><b>DittaCg18</b></li><li><b>TipocfCg44</b></li></ul>
    CSJointlyHeldCODTO:
      required:
        - cliforCg44
        - cliforcoCg44
        - customerSupplierCO
        - dittaCg18
        - percentuale
        - tipocfCg44
      type: object
      properties:
        cliforCg44:
          type: number
          description: CG4E_CLIFOR_CG44 - CliforCg44
          format: double
        cliforcoCg44:
          type: number
          description: CG4E_CLIFORCO_CG44 - CliforcoCg44
          format: double
        dittaCg18:
          type: number
          description: CG4E_DITTA_CG18 - DittaCg18
          format: double
        idcliforcoCg44:
          type: integer
          description: CG4E_IDCLIFORCO_CG44 - IdcliforcoCg44
          format: int32
          nullable: true
        percentuale:
          type: number
          description: CG4E_PERCENTUALE - Percentuale
          format: double
        tipocfCg44:
          type: number
          description: CG4E_TIPOCF_CG44 - TipocfCg44
          format: double
        customerSupplierCO:
          $ref: '#/components/schemas/CustomerSupplierCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG4E_CFCOINTESTATI - CSJointlyHeldCO<br>Proprietà
        chiave:<ul><li><b>CliforCg44</b></li><li><b>CliforcoCg44</b></li><li><b>DittaCg18</b></li><li><b>TipocfCg44</b></li></ul>
    CSLetterOfIntentCODTO:
      required:
        - alqIvaCg28
        - anno
        - cliForCg44
        - dataFineVal
        - dataInVal
        - dittaCg18
        - flagDisattiv
        - flagStDich
        - flagStReg
        - flgScartata
        - indTipoDich
        - tipoCFCg44
        - vatCodeCO
      type: object
      properties:
        alqIvaCg28:
          minLength: 1
          type: string
          description: MG28_ALQIVA_CG28 - Aliquota IVA
        anno:
          type: number
          description: MG28_ANNO - Anno
          format: double
        cliForCg44:
          type: number
          description: MG28_CLIFOR_CG44 - Codice Cliente / Fornitore
          format: double
        dataFineVal:
          type: string
          description: MG28_DATAFINEVAL - Data fine validità
          format: date-time
        dataInVal:
          type: string
          description: MG28_DATAINVAL - Data inizio validità
          format: date-time
        dataNsReg:
          type: string
          description: MG28_DATANSREG - Data emissione
          format: date-time
          nullable: true
        dataProtocollo:
          type: string
          description: MG28_DATAPROTOCOLLO - Data protocollo
          format: date-time
          nullable: true
        datarevoca:
          type: string
          description: MG28_DATAREVOCA - Data revoca
          format: date-time
          nullable: true
        dataRicez:
          type: string
          description: MG28_DATARICEZ - Data ricezione
          format: date-time
          nullable: true
        dittaCg18:
          type: number
          description: MG28_DITTA_CG18 - Ditta
          format: double
        dogana:
          type: string
          description: MG28_DOGANA - Dogana
          nullable: true
        finoAEuro:
          type: number
          description: MG28_FINOAEURO - Fino a Euro
          format: double
          nullable: true
        flagDisattiv:
          type: number
          description: MG28_FLGDISATTIV - Non attiva
          format: double
        flagStDich:
          type: number
          description: MG28_FLGSTDICH - Stampa dichiarazioni di intento
          format: double
        flagStReg:
          type: number
          description: MG28_FLGSTREG - Reg. st.
          format: double
        flgScartata:
          type: integer
          description: MG28_FLGSCARTATA - Scartata
          format: int32
        id:
          type: integer
          description: >-
            MG28_ID - ID tabella MG28 (lettera di intento) (Required only in
            PUT/PATCH)
          format: int32
          nullable: true
        indTipoDich:
          type: number
          description: MG28_INDTIPODICH - Tipo Dichiarazione
          format: double
        note:
          type: string
          description: MG28_NOTE - Note
          nullable: true
        numLetDich:
          type: string
          description: MG28_NUMLETDICH - Numero lettera dichiarante
          nullable: true
        numNsProt:
          type: number
          description: MG28_NUMNSPROT - Num ns Prot.
          format: double
          nullable: true
        numProtocollo:
          type: number
          description: MG28_NUMPROTOCOLLO - Numero protocollo
          format: double
          nullable: true
        progRinvio:
          type: number
          description: MG28_PROGRINVIO - Progressivo invio
          format: double
          nullable: true
        rowversion:
          type: string
          description: MG28_ROWVERSION - Rowversion
          format: byte
          nullable: true
        tipoCFCg44:
          type: number
          description: MG28_TIPOCF_CG44 - Tipo cliente fornitore
          format: double
        vatCodeCO:
          $ref: '#/components/schemas/VatCodeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG28_CLIFORINT - CSLetterOfIntentCO<br>Proprietà
        chiave:<ul><li><b>ID</b></li></ul>
    CSPaymentRangeCODTO:
      required:
        - cliforCg44
        - codScagl
        - currencyCO
        - dittaCg18
        - indPagpart
        - tipocfCg44
        - valutaCg08
      type: object
      properties:
        aimpdoc:
          type: number
          description: MG20_AIMPDOC - Limite superiore
          format: double
          nullable: true
        cliforCg44:
          type: number
          description: MG20_CLIFOR_CG44 - Codice Cliente / Fornitore
          format: double
        codPagCg62:
          type: string
          description: MG20_CODPAG_CG62 - Condizione pagamento
          nullable: true
        codScagl:
          type: number
          description: MG20_CODSCAGL - Scaglione
          format: double
        dittaCg18:
          type: number
          description: MG20_DITTA_CG18 - DittaCg18
          format: double
        id:
          type: integer
          description: MG20_ID - Id (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idCg62:
          type: integer
          description: MG20_ID_CG62 - IdCg62
          format: int64
          nullable: true
        idmediaCg99:
          type: number
          description: MG20_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indPagpart:
          type: number
          description: MG20_INDPAGPART - Applica condizione di pagamento
          format: double
        tipocfCg44:
          type: number
          description: MG20_TIPOCF_CG44 - Tipo Cliente / Fornitore
          format: double
        valutaCg08:
          minLength: 1
          type: string
          description: MG20_VALUTA_CG08 - Valuta
        currencyCO:
          $ref: '#/components/schemas/CurrencyCODTO'
        paymentTermCO:
          $ref: '#/components/schemas/PaymentTermCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG20_CLIFORSCPAG - CSPaymentRangeCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CSPostponementPeriodCODTO:
      required:
        - ammgg
        - cliforCg44
        - dammgg
        - dittaCg18
        - indTiposlit
        - tipocfCg44
        - tipoeff
      type: object
      properties:
        ammgg:
          type: number
          description: MG21_AMMGG - A gg/mm
          format: double
        cliforCg44:
          type: number
          description: MG21_CLIFOR_CG44 - Codice Cliente / Fornitore
          format: double
        dammgg:
          type: number
          description: MG21_DAMMGG - Da gg/mm
          format: double
        dittaCg18:
          type: number
          description: MG21_DITTA_CG18 - DittaCg18
          format: double
        ggmmfixslit:
          type: number
          description: MG21_GGMMFIXSLIT - gg/mm scad.
          format: double
          nullable: true
        ggslsucc:
          type: number
          description: MG21_GGSLSUCC - gg slittamento scad. successiva
          format: double
          nullable: true
        id:
          type: integer
          description: MG21_ID - Id (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idmediaCg99:
          type: number
          description: MG21_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indAppggfix:
          type: integer
          description: MG21_INDAPPGGFIX - IndAppggfix
          format: int32
          nullable: true
        indTiposlit:
          type: number
          description: MG21_INDTIPOSLIT - Tipo slittamento
          format: double
        tipocfCg44:
          type: number
          description: MG21_TIPOCF_CG44 - Tipo Cliente / Fornitore
          format: double
        tipoeff:
          type: number
          description: MG21_TIPOEFF - Tipo effetto
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG21_CLIFORSALPAG - CSPostponementPeriodCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CSSddCODTO:
      required:
        - cliforCg44
        - codIndiv
        - dittaCg18
        - flgVariato
        - indTiposdd
        - progR
        - tipocfCg44
        - tipologia
      type: object
      properties:
        bancaallineam:
          type: number
          description: MG29_BANCAALLINEAM - Codice ABI Banca Allineamento
          format: double
          nullable: true
        causrich:
          type: number
          description: MG29_CAUSRICH - Causale richiesta Azienda
          format: double
          nullable: true
        causrisp:
          type: number
          description: MG29_CAUSRISP - Causale Banca Allineamento
          format: double
          nullable: true
        cfiscsottoscr:
          type: string
          description: MG29_CFISCSOTTOSCR - Codice fiscale sottoscrittore
          nullable: true
        cliforCg44:
          type: number
          description: MG29_CLIFOR_CG44 - Codice Cliente / Fornitore
          format: double
        codAutoriz:
          type: string
          description: MG29_CODAUTORIZ - Codice autorizzazione (Acquisizione PagoBancomat)
          nullable: true
        codBicswift:
          type: string
          description: MG29_CODBICSWIFT - Codice BIC SWIFT
          nullable: true
        codClideb:
          type: string
          description: MG29_CODCLIDEB - Codice debitore
          nullable: true
        codClidebprec:
          type: string
          description: MG29_CODCLIDEBPREC - Codice debitore precedente
          nullable: true
        codIndiv:
          type: number
          description: MG29_CODINDIV - Codice individuale
          format: double
        codIndivprec:
          type: number
          description: MG29_CODINDIVPREC - Codice individuale precedente
          format: double
          nullable: true
        codRif:
          type: string
          description: MG29_CODRIF - Codice riferimento
          nullable: true
        contocorr:
          type: string
          description: MG29_CONTOCORR - Conto corrente
          nullable: true
        contocorrprec:
          type: string
          description: MG29_CONTOCORRPREC - Conto corrente precedente
          nullable: true
        datamandato:
          type: string
          description: MG29_DATAMANDATO - Data mandato RID
          format: date-time
          nullable: true
        dataprimascad:
          type: string
          description: MG29_DATAPRIMASCAD - Data prima scadenza
          format: date-time
          nullable: true
        datarich:
          type: string
          description: MG29_DATARICH - Data richiesta
          format: date-time
          nullable: true
        datarisp:
          type: string
          description: MG29_DATARISP - Data causale Banca Allineamento
          format: date-time
          nullable: true
        dataultimascad:
          type: string
          description: MG29_DATAULTIMASCAD - Data ultima scadenza
          format: date-time
          nullable: true
        descrizione:
          type: string
          description: MG29_DESCRIZIONE - Descrizione
          nullable: true
        diniego:
          type: integer
          description: MG29_DINIEGO - Diniego
          format: int32
          nullable: true
        dittaCg18:
          type: number
          description: MG29_DITTA_CG18 - Ditta
          format: double
        flgAllineam:
          type: number
          description: MG29_FLGALLINEAM - FlgAllineam
          format: double
          nullable: true
        flgDisattivato:
          type: integer
          description: MG29_FLGDISATTIVATO - Dati disattivati
          format: int32
          nullable: true
        flgVariato:
          type: number
          description: MG29_FLGVARIATO - Variato
          format: double
        id:
          type: integer
          description: MG29_ID - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        idmediaCg99:
          type: number
          description: MG29_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        impmaxrata:
          type: number
          description: MG29_IMPMAXRATA - Importo massimo/prefissato
          format: double
          nullable: true
        indIrsottoscr:
          type: string
          description: MG29_INDIRSOTTOSCR - Indirizzo sottoscrittore
          nullable: true
        indStorno:
          type: number
          description: MG29_INDSTORNO - Facoltà di storno
          format: double
          nullable: true
        indStornoprec:
          type: number
          description: MG29_INDSTORNOPREC - Facoltà di storno precedente
          format: double
          nullable: true
        indTipoinc:
          type: integer
          description: MG29_INDTIPOINC - Sequenza
          format: int32
          nullable: true
        indTiposdd:
          type: number
          description: MG29_INDTIPOSDD - Tipo SDD
          format: double
        locsottoscr:
          type: string
          description: MG29_LOCSOTTOSCR - Località sottoscrittore
          nullable: true
        nrrate:
          type: number
          description: MG29_NRRATE - Numero rate
          format: double
          nullable: true
        nuovabanca:
          type: number
          description: MG29_NUOVABANCA - Nuovabanca
          format: double
          nullable: true
        progR:
          type: integer
          description: MG29_PROGR - Progr.
          format: int32
        ragsosottoscr:
          type: string
          description: MG29_RAGSOSOTTOSCR - Ragione sociale sottoscrittore
          nullable: true
        ridabi:
          type: number
          description: MG29_RIDABI - Codice ABI
          format: double
          nullable: true
        ridabiprec:
          type: number
          description: MG29_RIDABIPREC - Codice ABI precedente
          format: double
          nullable: true
        ridcab:
          type: number
          description: MG29_RIDCAB - Codice CAB
          format: double
          nullable: true
        ridcabprec:
          type: number
          description: MG29_RIDCABPREC - Codice CAB precedente
          format: double
          nullable: true
        ridiban:
          type: string
          description: MG29_RIDIBAN - IBAN
          nullable: true
        ridibanprec:
          type: string
          description: MG29_RIDIBANPREC - IBAN (International Bank Account Number)
          nullable: true
        soggtitibanCg16:
          type: integer
          description: MG29_SOGGTITIBAN_CG16 - Soggetto titolare IBAN
          format: int32
          nullable: true
        tipocfCg44:
          type: number
          description: MG29_TIPOCF_CG44 - Tipo Cliente / Fornitore
          format: double
        tipoinclocked:
          type: number
          description: MG29_TIPOINCLOCKED - Tipo seq. incasso bloccato
          format: double
          nullable: true
        tipologia:
          type: number
          description: MG29_TIPOLOGIA - Tipologia
          format: double
        tipologiaprec:
          type: number
          description: MG29_TIPOLOGIAPREC - Tipologiaprec
          format: double
          nullable: true
        csHistorySddCO:
          type: array
          items:
            $ref: '#/components/schemas/CSHistorySddCODTO'
          nullable: true
        nationCO:
          $ref: '#/components/schemas/NationCODTO'
        soggtitiban:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: MG29_CLIFORRID - CSSddCO<br>Proprietà chiave:<ul><li><b>Id</b></li></ul>
    CSWithEffectivePaymentConditionParametersDTO:
      type: object
      properties:
        idCliFor:
          type: integer
          format: int32
        valuta:
          type: string
          nullable: true
        impTotale:
          type: number
          format: double
          nullable: true
        impTotaleVal:
          type: number
          format: double
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        Parametri per lettura cli/for con condizione di pagamento in base agli
        scaglioni
    CalculateAmountParametersDTO:
      type: object
      properties:
        fromCurrencyCode:
          type: string
          nullable: true
        toCurrencyCode:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        currencyExchange:
          type: number
          format: double
          nullable: true
        toCurrencyIsCompanyCurrency:
          type: boolean
      additionalProperties: false
      description: >-
        Oggetto contenente i parametri necessari per il calcolo. Se non viene
        passato il cambio verrà preso da CG09_TABCAMBI
    CalculateAmountResultDTO:
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        currencyExchange:
          type: number
          format: double
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Importo risultante dal calcolo e il cambio usato
    CalculateExchangeRateParametersDTO:
      type: object
      properties:
        valutaRiferimento:
          type: string
          nullable: true
        valuta:
          type: string
          nullable: true
        data:
          type: string
          format: date-time
        tipoCambioRichiesto:
          type: integer
          format: int32
      additionalProperties: false
      description: Calcola il cambio valute in base ai parametri forniti
    CalculateExchangeRateResultDTO:
      required:
        - Cambio
        - IndicatoreCertoIncerto
        - NumeroDecimali
        - TipoCambioRecuperato
      type: object
      properties:
        tipoCambioRecuperato:
          type: integer
          format: int32
        numeroDecimali:
          type: integer
          format: int32
        cambio:
          type: number
          format: double
        dataCambio:
          type: string
          format: date-time
          nullable: true
        indicatoreCertoIncerto:
          type: integer
          format: int32
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        Risultati del calcolo cambio valute<br>- indicatoreCertoIncerto: 0 =
        Certo per certo, 1 = Incerto per certo<br>- tipoCambioRecuperato: 
    CategoryCODTO:
      required:
        - categ
        - dittaCg18
        - macrocatMg10
        - tipocfMg10
      type: object
      properties:
        categ:
          minLength: 1
          type: string
          description: MG11_CATEG - Categoria
        descrcat:
          type: string
          description: MG11_DESCRCAT - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG11_DITTA_CG18 - Ditta
          format: double
        macrocatMg10:
          minLength: 1
          type: string
          description: MG11_MACROCAT_MG10 - Macrocategoria
        tipocfMg10:
          type: number
          description: MG11_TIPOCF_MG10 - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG11_CATEG - CategoryCO<br>Proprietà
        chiave:<ul><li><b>Categ</b></li><li><b>DittaCg18</b></li><li><b>MacrocatMg10</b></li><li><b>TipocfMg10</b></li></ul>
    CodePaymentTermCOParametersDTO:
      type: object
      properties:
        codePag:
          type: string
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    CompanyBankCODTO:
      required:
        - dittaCg18
        - flgCambiali
        - flgCessioni
        - flgMav
        - flgPref
        - flgRiba
        - flgRidsdd
        - flgScfatt
        - flgTratte
        - indCheckpivacf
        - indTipopres
        - progR
      type: object
      properties:
        aprogressmav:
          type: number
          description: EF08_APROGRESSMAV - Aprogressmav
          format: double
          nullable: true
        bancaCg12:
          type: number
          description: EF08_BANCA_CG12 - Banca
          format: double
          nullable: true
        bbananticipi:
          type: string
          description: EF08_BBANANTICIPI - Bbananticipi
          nullable: true
        bbanconto:
          type: string
          description: EF08_BBANCONTO - BBAN
          nullable: true
        bbaneffpresef:
          type: string
          description: EF08_BBANEFFPRESEF - Bbaneffpresef
          nullable: true
        bbanordpbonif:
          type: string
          description: EF08_BBANORDPBONIF - Bbanordpbonif
          nullable: true
        bicbanca:
          type: string
          description: EF08_BICBANCA - BIC
          nullable: true
        cabbonifCg13:
          type: number
          description: EF08_CABBONIF_CG13 - CabbonifCg13
          format: double
          nullable: true
        cabcontoCg13:
          type: number
          description: EF08_CABCONTO_CG13 - CabcontoCg13
          format: double
          nullable: true
        cabmavCg13:
          type: number
          description: EF08_CABMAV_CG13 - CabmavCg13
          format: double
          nullable: true
        cabribaCg13:
          type: number
          description: EF08_CABRIBA_CG13 - CabribaCg13
          format: double
          nullable: true
        cabridCg13:
          type: number
          description: EF08_CABRID_CG13 - CabridCg13
          format: double
          nullable: true
        ccanticipi:
          type: string
          description: EF08_CCANTICIPI - Ccanticipi
          nullable: true
        ccconto:
          type: string
          description: EF08_CCCONTO - C/C
          nullable: true
        cceffpresef:
          type: string
          description: EF08_CCEFFPRESEF - Cceffpresef
          nullable: true
        ccordpbonif:
          type: string
          description: EF08_CCORDPBONIF - Ccordpbonif
          nullable: true
        codAzienda:
          type: string
          description: EF08_CODAZIENDA - CodAzienda
          nullable: true
        codiceCg07:
          type: number
          description: EF08_CODICE_CG07 - Nazione
          format: double
          nullable: true
        codicecuc:
          type: string
          description: EF08_CODICECUC - Codicecuc
          nullable: true
        codRappopor:
          type: string
          description: EF08_CODRAPPOPOR - CodRappopor
          nullable: true
        codSia:
          type: string
          description: EF08_CODSIA - CodSia
          nullable: true
        creditidentifier:
          type: string
          description: EF08_CREDITIDENTIFIER - Creditidentifier
          nullable: true
        daprogressmav:
          type: number
          description: EF08_DAPROGRESSMAV - Daprogressmav
          format: double
          nullable: true
        descr:
          type: string
          description: EF08_DESCR - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: EF08_DITTA_CG18 - Ditta
          format: double
        flgAutattribnrmav:
          type: integer
          description: EF08_FLGAUTATTRIBNRMAV - FlgAutattribnrmav
          format: int32
          nullable: true
        flgCambiali:
          type: number
          description: EF08_FLGCAMBIALI - FlgCambiali
          format: double
        flgCessioni:
          type: number
          description: EF08_FLGCESSIONI - FlgCessioni
          format: double
        flgMav:
          type: number
          description: EF08_FLGMAV - FlgMav
          format: double
        flgPref:
          type: number
          description: EF08_FLGPREF - Preferenziale
          format: double
        flgRiba:
          type: number
          description: EF08_FLGRIBA - FlgRiba
          format: double
        flgRibacamb:
          type: number
          description: EF08_FLGRIBACAMB - FlgRibacamb
          format: double
          nullable: true
        flgRibacess:
          type: number
          description: EF08_FLGRIBACESS - FlgRibacess
          format: double
          nullable: true
        flgRibaricba:
          type: number
          description: EF08_FLGRIBARICBA - FlgRibaricba
          format: double
          nullable: true
        flgRibatratac:
          type: number
          description: EF08_FLGRIBATRATAC - FlgRibatratac
          format: double
          nullable: true
        flgRibatratte:
          type: number
          description: EF08_FLGRIBATRATTE - FlgRibatratte
          format: double
          nullable: true
        flgRidsdd:
          type: number
          description: EF08_FLGRIDSDD - FlgRidsdd
          format: double
        flgRidsddraggr:
          type: integer
          description: EF08_FLGRIDSDDRAGGR - FlgRidsddraggr
          format: int32
          nullable: true
        flgScfatt:
          type: number
          description: EF08_FLGSCFATT - FlgScfatt
          format: double
        flgTratte:
          type: number
          description: EF08_FLGTRATTE - FlgTratte
          format: double
        ggvalcambalt:
          type: number
          description: EF08_GGVALCAMBALT - Ggvalcambalt
          format: double
          nullable: true
        ggvalcambfil:
          type: number
          description: EF08_GGVALCAMBFIL - Ggvalcambfil
          format: double
          nullable: true
        ggvalmavincalt:
          type: number
          description: EF08_GGVALMAVINCALT - Ggvalmavincalt
          format: double
          nullable: true
        ggvalmavincfil:
          type: number
          description: EF08_GGVALMAVINCFIL - Ggvalmavincfil
          format: double
          nullable: true
        ggvalmavincpos:
          type: number
          description: EF08_GGVALMAVINCPOS - Ggvalmavincpos
          format: double
          nullable: true
        ggvalmavsbf:
          type: number
          description: EF08_GGVALMAVSBF - Ggvalmavsbf
          format: double
          nullable: true
        ggvalribaalt:
          type: number
          description: EF08_GGVALRIBAALT - Ggvalribaalt
          format: double
          nullable: true
        ggvalribafil:
          type: number
          description: EF08_GGVALRIBAFIL - Ggvalribafil
          format: double
          nullable: true
        ggvalridalt:
          type: number
          description: EF08_GGVALRIDALT - Ggvalridalt
          format: double
          nullable: true
        ggvalridfil:
          type: number
          description: EF08_GGVALRIDFIL - Ggvalridfil
          format: double
          nullable: true
        ggvalscfattalt:
          type: number
          description: EF08_GGVALSCFATTALT - Ggvalscfattalt
          format: double
          nullable: true
        ggvalscfattfil:
          type: number
          description: EF08_GGVALSCFATTFIL - Ggvalscfattfil
          format: double
          nullable: true
        ggvaltratalt:
          type: number
          description: EF08_GGVALTRATALT - Ggvaltratalt
          format: double
          nullable: true
        ggvaltratfil:
          type: number
          description: EF08_GGVALTRATFIL - Ggvaltratfil
          format: double
          nullable: true
        ibananticipi:
          type: string
          description: EF08_IBANANTICIPI - Ibananticipi
          nullable: true
        ibanconto:
          type: string
          description: EF08_IBANCONTO - IBAN
          nullable: true
        ibaneffpresef:
          type: string
          description: EF08_IBANEFFPRESEF - Ibaneffpresef
          nullable: true
        ibanordpbonif:
          type: string
          description: EF08_IBANORDPBONIF - Ibanordpbonif
          nullable: true
        id:
          type: integer
          description: EF08_ID - ID (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idbancaestera:
          type: string
          description: EF08_IDBANCAESTERA - Idbancaestera
          nullable: true
        idcontratto:
          type: string
          description: EF08_IDCONTRATTO - Id Contratto
          nullable: true
        idmediaCg99:
          type: number
          description: EF08_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idsuccursale:
          type: number
          description: EF08_IDSUCCURSALE - ID Succursale
          format: double
          nullable: true
        impcastel:
          type: number
          description: EF08_IMPCASTEL - Impcastel
          format: double
          nullable: true
        impfido:
          type: number
          description: EF08_IMPFIDO - Importo fido
          format: double
          nullable: true
        indCheckpivacf:
          type: integer
          description: EF08_INDCHECKPIVACF - Controllo presenza CF e P.IVA
          format: int32
        indCompind:
          type: integer
          description: EF08_INDCOMPIND - IndCompind
          format: int32
          nullable: true
        indContpmtinf:
          type: integer
          description: EF08_INDCONTPMTINF - IndContpmtinf
          format: int32
          nullable: true
        indPresmav:
          type: number
          description: EF08_INDPRESMAV - IndPresmav
          format: double
          nullable: true
        indPresriba:
          type: number
          description: EF08_INDPRESRIBA - IndPresriba
          format: double
          nullable: true
        indPresrid:
          type: number
          description: EF08_INDPRESRID - IndPresrid
          format: double
          nullable: true
        indTipolib:
          type: number
          description: EF08_INDTIPOLIB - IndTipolib
          format: double
          nullable: true
        indTipopres:
          type: number
          description: EF08_INDTIPOPRES - IndTipopres
          format: double
        locbancaestera:
          type: string
          description: EF08_LOCBANCAESTERA - Locbancaestera
          nullable: true
        maxgginsoluti:
          type: number
          description: EF08_MAXGGINSOLUTI - Max gg. insoluti
          format: double
          nullable: true
        prefissoattribmav:
          type: number
          description: EF08_PREFISSOATTRIBMAV - Prefissoattribmav
          format: double
          nullable: true
        progR:
          type: number
          description: EF08_PROGR - Progr.
          format: double
        rowversion:
          type: string
          description: EF08_ROWVERSION - Rowversion
          format: byte
          nullable: true
        scfindbasecalc:
          type: number
          description: EF08_SCFINDBASECALC - Scfindbasecalc
          format: double
          nullable: true
        scfnsdocrif:
          type: string
          description: EF08_SCFNSDOCRIF - Scfnsdocrif
          nullable: true
        scfpercpres:
          type: number
          description: EF08_SCFPERCPRES - Scfpercpres
          format: double
          nullable: true
        scfperctasso:
          type: number
          description: EF08_SCFPERCTASSO - Scfperctasso
          format: double
          nullable: true
        scfvsdocrif:
          type: string
          description: EF08_SCFVSDOCRIF - Scfvsdocrif
          nullable: true
        spcommbonalt:
          type: number
          description: EF08_SPCOMMBONALT - Spcommbonalt
          format: double
          nullable: true
        spcommbonfil:
          type: number
          description: EF08_SPCOMMBONFIL - Spcommbonfil
          format: double
          nullable: true
        spcommordpalt:
          type: number
          description: EF08_SPCOMMORDPALT - Spcommordpalt
          format: double
          nullable: true
        spcommordpfil:
          type: number
          description: EF08_SPCOMMORDPFIL - Spcommordpfil
          format: double
          nullable: true
        spinccambalt:
          type: number
          description: EF08_SPINCCAMBALT - Spinccambalt
          format: double
          nullable: true
        spinccambfil:
          type: number
          description: EF08_SPINCCAMBFIL - Spinccambfil
          format: double
          nullable: true
        spinccoralt:
          type: number
          description: EF08_SPINCCORALT - Spinccoralt
          format: double
          nullable: true
        spinccorfil:
          type: number
          description: EF08_SPINCCORFIL - Spinccorfil
          format: double
          nullable: true
        spincesitopag:
          type: number
          description: EF08_SPINCESITOPAG - Spincesitopag
          format: double
          nullable: true
        spincmavincalt:
          type: number
          description: EF08_SPINCMAVINCALT - Spincmavincalt
          format: double
          nullable: true
        spincmavincfil:
          type: number
          description: EF08_SPINCMAVINCFIL - Spincmavincfil
          format: double
          nullable: true
        spincmavincpos:
          type: number
          description: EF08_SPINCMAVINCPOS - Spincmavincpos
          format: double
          nullable: true
        spincmavsbf:
          type: number
          description: EF08_SPINCMAVSBF - Spincmavsbf
          format: double
          nullable: true
        spincribaalt:
          type: number
          description: EF08_SPINCRIBAALT - Spincribaalt
          format: double
          nullable: true
        spincribafil:
          type: number
          description: EF08_SPINCRIBAFIL - Spincribafil
          format: double
          nullable: true
        spincridalt:
          type: number
          description: EF08_SPINCRIDALT - Spincridalt
          format: double
          nullable: true
        spincridfil:
          type: number
          description: EF08_SPINCRIDFIL - Spincridfil
          format: double
          nullable: true
        spinctraalt:
          type: number
          description: EF08_SPINCTRAALT - Spinctraalt
          format: double
          nullable: true
        spinctrafil:
          type: number
          description: EF08_SPINCTRAFIL - Spinctrafil
          format: double
          nullable: true
        sppresdistinta:
          type: number
          description: EF08_SPPRESDISTINTA - Sppresdistinta
          format: double
          nullable: true
        spritcamb:
          type: number
          description: EF08_SPRITCAMB - Spritcamb
          format: double
          nullable: true
        spritcambcl:
          type: number
          description: EF08_SPRITCAMBCL - Spritcambcl
          format: double
          nullable: true
        spritmavincas:
          type: number
          description: EF08_SPRITMAVINCAS - Spritmavincas
          format: double
          nullable: true
        spritmavincascl:
          type: number
          description: EF08_SPRITMAVINCASCL - Spritmavincascl
          format: double
          nullable: true
        spritmavsbf:
          type: number
          description: EF08_SPRITMAVSBF - Spritmavsbf
          format: double
          nullable: true
        spritmavsbfcl:
          type: number
          description: EF08_SPRITMAVSBFCL - Spritmavsbfcl
          format: double
          nullable: true
        spritriba:
          type: number
          description: EF08_SPRITRIBA - Spritriba
          format: double
          nullable: true
        spritribacl:
          type: number
          description: EF08_SPRITRIBACL - Spritribacl
          format: double
          nullable: true
        spritrid:
          type: number
          description: EF08_SPRITRID - Spritrid
          format: double
          nullable: true
        spritridcl:
          type: number
          description: EF08_SPRITRIDCL - Spritridcl
          format: double
          nullable: true
        sprittratte:
          type: number
          description: EF08_SPRITTRATTE - Sprittratte
          format: double
          nullable: true
        sprittrattecl:
          type: number
          description: EF08_SPRITTRATTECL - Sprittrattecl
          format: double
          nullable: true
        tipobanca:
          type: number
          description: EF08_TIPOBANCA - Tipo banca
          format: double
          nullable: true
        ultprogressmav:
          type: number
          description: EF08_ULTPROGRESSMAV - Ultprogressmav
          format: double
          nullable: true
        bankCO:
          $ref: '#/components/schemas/BankCODTO'
        nationCO:
          $ref: '#/components/schemas/NationCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        EF08_BANCHE - CompanyBankCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CurrencyCODTO:
      required:
        - codice
        - indCertoincerto
      type: object
      properties:
        cambiofisso:
          type: number
          description: CG08_CAMBIOFISSO - Cambio fisso
          format: double
          nullable: true
        codice:
          minLength: 1
          type: string
          description: CG08_CODICE - Codice
        dataattuem:
          type: string
          description: CG08_DATAATTUEM - Data attuazione valuta UEM
          format: date-time
          nullable: true
        descr:
          type: string
          description: CG08_DESCR - Descrizione
          nullable: true
        flgValuem:
          type: number
          description: CG08_FLGVALUEM - Flag valuta UEM
          format: double
          nullable: true
        idmediaCg99:
          type: number
          description: CG08_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indCertoincerto:
          type: integer
          description: CG08_INDCERTOINCERTO - Certo
          format: int32
        indSepmigl:
          type: number
          description: CG08_INDSEPMIGL - Separatore migliaia
          format: double
          nullable: true
        indValuem:
          type: number
          description: CG08_INDVALUEM - Flag valuta UEM
          format: double
          nullable: true
        numdec:
          type: number
          description: CG08_NUMDEC - Numeri Decimali
          format: double
          nullable: true
        sigla:
          type: string
          description: CG08_SIGLA - Sigla
          nullable: true
        exchangeRateCO:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRateCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG08_TABVALUTE - Valuta<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    CustSupplDataInvoicePACODTO:
      required:
        - codiceCg16
        - flgAsw
        - indTypeb2b
        - tipocfCg44
      type: object
      properties:
        codiceCg16:
          type: integer
          description: CG1O_CODICE_CG16 - CodiceCg16
          format: int32
        emailcortesia:
          type: string
          description: CG1O_EMAILCORTESIA - Emailcortesia
          nullable: true
        flgAsw:
          type: integer
          description: CG1O_FLGASW - FlgAsw
          format: int32
        indTypeb2b:
          type: integer
          description: CG1O_INDTYPEB2B - IndTypeb2b
          format: int32
        tipocfCg44:
          type: number
          description: CG1O_TIPOCF_CG44 - TipocfCg44
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG1O_DATIGESTANAG - CustSupplDataInvoicePACO<br>Proprietà
        chiave:<ul><li><b>CodiceCg16</b></li><li><b>TipocfCg44</b></li></ul>
    CustomerSupplierCIGCUPCODTO:
      required:
        - cigcuPcode
        - cliforCg44
        - dittaCg18
        - idcigcupCo1h
        - tipocfCg44
      type: object
      properties:
        cliforCg44:
          type: number
          description: CO1I_CLIFOR_CG44 - CliforCg44
          format: double
        dittaCg18:
          type: number
          description: CO1I_DITTA_CG18 - Ditta
          format: double
        id:
          type: integer
          description: CO1I_ID - ID (Required only in PUT/PATCH)
          format: int32
          nullable: true
        idcigcupCo1h:
          type: integer
          description: CO1I_IDCIGCUP_CO1H - IdcigcupCo1h
          format: int32
        progREf08:
          type: number
          description: CO1I_PROGR_EF08 - ProgREf08
          format: double
          nullable: true
        progRMg35:
          type: integer
          description: CO1I_PROGR_MG35 - ProgRMg35
          format: int32
          nullable: true
        rowversion:
          type: string
          description: CO1I_ROWVERSION - Rowversion
          format: byte
          nullable: true
        tipocfCg44:
          type: number
          description: CO1I_TIPOCF_CG44 - TipocfCg44
          format: double
        cigcuPcode:
          $ref: '#/components/schemas/CIGCUPMasterDataCODTO'
        companyBank:
          $ref: '#/components/schemas/CompanyBankCODTO'
        csBankCO:
          $ref: '#/components/schemas/CSBankCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CO1I_CFCIGCUP - CustomerSupplierCIGCUPCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    CustomerSupplierCODTO:
      required:
        - clifor
        - dittaCg18
        - dmsPublishedEntityFW
        - flgArt62
        - flgAttivo
        - flgCointestati
        - flgIntercompany
        - generalMasterDataCO
        - guid
        - indElenchimov3000
        - tipocf
      type: object
      properties:
        gmdUpdateAdditionalParams:
          $ref: '#/components/schemas/GMDUpdateAdditionalParametersDTO'
        clifor:
          type: number
          description: CG44_CLIFOR - Codice cli/for
          format: double
        codAbiCg12:
          type: number
          description: CG44_CODABI_CG12 - Codice banca
          format: double
          nullable: true
        codCabCg13:
          type: number
          description: CG44_CODCAB_CG13 - Codice agenzia
          format: double
          nullable: true
        codiceCg28:
          type: string
          description: CG44_CODICE_CG28 - Codice aliquota IVA
          nullable: true
        contoCg24:
          type: string
          description: CG44_CONTO_CG24 - Conto merci
          nullable: true
        contorCg24:
          type: string
          description: CG44_CONTOR_CG24 - Conto merci reso
          nullable: true
        contratto:
          type: string
          description: CG44_CONTRATTO - Codice contratto
          nullable: true
        datavaliva:
          type: string
          description: CG44_DATAVALIVA - Fine validità codice IVA
          format: date-time
          nullable: true
        dittaCg18:
          type: number
          description: CG44_DITTA_CG18 - Ditta
          format: double
        flgArt62:
          type: integer
          description: CG44_FLGART62 - Flag Art. 62
          format: int32
        flgAttivo:
          type: number
          description: CG44_FLGATTIVO - Attivo
          format: double
        flgCointestati:
          type: number
          description: CG44_FLGCOINTESTATI - Cointestati
          format: double
        flgIntercompany:
          type: number
          description: CG44_FLGINTERCOMPANY - FlgIntercompany
          format: double
        ggscadfix:
          type: number
          description: CG44_GGSCADFIX - GG scad. fix
          format: double
          nullable: true
        gruppoCg10:
          type: number
          description: CG44_GRUPPO_CG10 - Codice Pdc
          format: double
          nullable: true
        guid:
          type: string
          description: CG44_GUID - GUID
          format: uuid
        idclifor:
          type: integer
          description: CG44_IDCLIFOR - ID cliente (Required only in PUT/PATCH)
          format: int32
          nullable: true
        idmediaCg99:
          type: number
          description: CG44_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indElenchimov3000:
          type: integer
          description: CG44_INDELENCHIMOV3000 - Ind. gestione elenchi mov. 3.000€
          format: int32
        intermedioCg40:
          type: number
          description: CG44_INTERMEDIO_CG40 - Codice intermedio
          format: double
          nullable: true
        lastchange:
          type: string
          description: CG44_LASTCHANGE - Data ultima variazione
          format: date-time
          nullable: true
        progREf08:
          type: number
          description: CG44_PROGR_EF08 - Codice banca aziendale
          format: double
          nullable: true
        tipocf:
          type: number
          description: CG44_TIPOCF - Tipo Cliente / Fornitore
          format: double
        idExtendedAttributeEntity:
          type: integer
          format: int32
        idExtendedAttributeSubEntity:
          type: integer
          format: int32
        agentCO:
          $ref: '#/components/schemas/AgentCODTO'
        blackListGeneralMasterData:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        csAccountingIndexCO:
          $ref: '#/components/schemas/CSAccountingIndexCODTO'
        csBankCO:
          type: array
          items:
            $ref: '#/components/schemas/CSBankCODTO'
          nullable: true
        csCompanyBankCO:
          type: array
          items:
            $ref: '#/components/schemas/CSCompanyBankCODTO'
          nullable: true
        csInfoCO:
          $ref: '#/components/schemas/CSInfoCODTO'
        csJointlyHeldCO:
          type: array
          items:
            $ref: '#/components/schemas/CSJointlyHeldCODTO'
          nullable: true
        csPaymentRangeCO:
          type: array
          items:
            $ref: '#/components/schemas/CSPaymentRangeCODTO'
          nullable: true
        csPostponementPeriodCO:
          type: array
          items:
            $ref: '#/components/schemas/CSPostponementPeriodCODTO'
          nullable: true
        csSddCO:
          type: array
          items:
            $ref: '#/components/schemas/CSSddCODTO'
          nullable: true
        currencyCO:
          $ref: '#/components/schemas/CurrencyCODTO'
        customerSupplierCIGCUPCO:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSupplierCIGCUPCODTO'
          nullable: true
        custSupplDataInvoicePACO:
          $ref: '#/components/schemas/CustSupplDataInvoicePACODTO'
        dmsPublishedEntityFW:
          $ref: '#/components/schemas/DMSPublishedEntityFWDTO'
        generalMasterDataCO:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        officeCO:
          $ref: '#/components/schemas/OfficeCODTO'
        officePACO:
          type: array
          items:
            $ref: '#/components/schemas/OfficePACODTO'
          nullable: true
        paymentTermCO:
          $ref: '#/components/schemas/PaymentTermCODTO'
        vatCodeCO:
          $ref: '#/components/schemas/VatCodeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG44_CLIFOR - Cliente fornitore<br>Proprietà
        chiave:<ul><li><b>Idclifor</b></li></ul>
    DMSPublishedEntityFWDTO:
      type: object
      properties:
        guid:
          type: string
          description: Guid entità.
          format: uuid
        tipoarchHm30:
          type: integer
          description: Tipologia entità.
          format: int32
        idknos:
          type: integer
          description: Id Knos.
          format: int32
          nullable: true
        dittaCg18:
          type: number
          description: Azienda
          format: double
          nullable: true
        protocollo:
          type: string
          description: Prtocollo
          nullable: true
        flgInvalid:
          type: integer
          description: Flag invalido
          format: int32
        percorso:
          type: string
          description: Path
          nullable: true
        nome:
          type: string
          description: File name
          nullable: true
        datapub:
          type: string
          description: Data pubblicazione
          format: date-time
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Stato attuale di un'entità.
    ExchangeRateCODTO:
      required:
        - anno
        - codiceCg08
        - currencyCO
        - giorno
        - indCertoincerto
        - mese
      type: object
      properties:
        adegcambio:
          type: number
          description: CG09_ADEGCAMBIO -  Cambio UIC Annuale
          format: double
          nullable: true
        anno:
          type: number
          description: CG09_ANNO - Anno
          format: double
        cambio:
          type: number
          description: CG09_CAMBIO - Cambio
          format: double
          nullable: true
        codiceCg08:
          minLength: 1
          type: string
          description: CG09_CODICE_CG08 - Codice valuta
        giorno:
          type: number
          description: CG09_GIORNO - Giorno
          format: double
        idmediaCg99:
          type: number
          description: CG09_IDMEDIA_CG99 - Hypermedia
          format: double
          nullable: true
        indCertoincerto:
          type: integer
          description: CG09_INDCERTOINCERTO - Cambio incerto per certo
          format: int32
        mese:
          type: number
          description: CG09_MESE - Mese
          format: double
        rowversion:
          type: string
          description: CG09_ROWVERSION - RowVersion
          format: byte
          nullable: true
        currencyCO:
          $ref: '#/components/schemas/CurrencyCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG09_TABCAMBI - ExchangeRateCO<br>Proprietà
        chiave:<ul><li><b>Anno</b></li><li><b>CodiceCg08</b></li><li><b>Giorno</b></li><li><b>Mese</b></li></ul>
    FederalStateViewCODTO:
      required:
        - a2iso3166Cg07
        - codiceCg07
        - statofed
      type: object
      properties:
        a2iso3166Cg07:
          minLength: 1
          type: string
          description: VCG1S_A2ISO3166_CG07 - A2iso3166Cg07
        codiceCg07:
          type: number
          description: VCG1S_CODICE_CG07 - Codice Stato
          format: double
        descr:
          type: string
          description: VCG1S_DESCR - Descrizione
          nullable: true
        iso3166statofed:
          type: string
          description: VCG1S_ISO3166STATOFED - Country ISO 3166
          nullable: true
        statofed:
          minLength: 1
          type: string
          description: VCG1S_STATOFED - Stato federato
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        VCG1S_STATIFED - FederalStateViewCO<br>Proprietà
        chiave:<ul><li><b>CodiceCg07</b></li><li><b>Statofed</b></li></ul>
    ForeignPaymentCodeCODTO:
      required:
        - codice
      type: object
      properties:
        codice:
          minLength: 1
          type: string
          description: CG6D_CODICE - Codice
        codIso:
          type: string
          description: CG6D_CODISO - Codice ISO
          nullable: true
        descrpag:
          type: string
          description: CG6D_DESCRPAG - Descrizione
          nullable: true
        flgIbanobbl:
          type: integer
          description: CG6D_FLGIBANOBBL - IBAN
          format: int32
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG6D_CODPAGEXPMAN - ForeignPaymentCodeCO<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    GMDUpdateAdditionalParametersDTO:
      type: object
      properties:
        codice:
          type: integer
          format: int32
          nullable: true
        ragSoAnag:
          type: string
          nullable: true
        indirizzo:
          type: string
          nullable: true
        numCiv:
          type: string
          nullable: true
        cap:
          type: string
          nullable: true
        citta:
          type: string
          nullable: true
        prov:
          type: string
          nullable: true
        codiceCg07:
          type: number
          format: double
          nullable: true
        partiva:
          type: string
          nullable: true
        codFiscale:
          type: string
          nullable: true
        tel1Num:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        tipologia:
          type: string
          nullable: true
        codLegCg01:
          type: string
          nullable: true
        descrCg07:
          type: string
          nullable: true
        nationIso:
          type: string
          nullable: true
      additionalProperties: false
      description: Parametri per scrittura dati General Master Data
    GeneralMasterDataCODTO:
      required:
        - codice
        - flgAnagval
        - flgFattpa
        - flgNoblacklist
        - flgOmonimo
        - flgPrsfis
        - indsoggrit
        - sesso
      type: object
      properties:
        alias:
          type: string
          description: CG16_ALIAS - Alias
          nullable: true
        auidAu04:
          type: integer
          description: CG16_AUID_AU04 - Codice AU
          format: int64
          nullable: true
        cap:
          type: string
          description: CG16_CAP - Cap
          nullable: true
        capcor:
          type: string
          description: CG16_CAPCOR - Cap corrispondenza
          nullable: true
        capfisc:
          type: string
          description: CG16_CAPFISC - CAP fiscale
          nullable: true
        cellnum:
          type: string
          description: CG16_CELLNUM - Cell.
          nullable: true
        citta:
          type: string
          description: CG16_CITTA - Città
          nullable: true
        cittacor:
          type: string
          description: CG16_CITTACOR - Città corrispondenza
          nullable: true
        cittafisc:
          type: string
          description: CG16_CITTAFISC - Città fiscale
          nullable: true
        codfiscale:
          type: string
          description: CG16_CODFISCALE - Codice fiscale
          nullable: true
        codice:
          type: integer
          description: CG16_CODICE - Codice
          format: int32
        codiceCg07:
          type: number
          description: CG16_CODICE_CG07 - Stato estero
          format: double
          nullable: true
        codiceCg15:
          type: string
          description: CG16_CODICE_CG15 - Causale prestazione
          nullable: true
        codiceCgc0:
          type: number
          description: CG16_CODICE_CGC0 - Azienda intercompany
          format: double
          nullable: true
        codicecorCg07:
          type: number
          description: CG16_CODICECOR_CG07 - Stato estero corrisp.
          format: double
          nullable: true
        codiceident:
          type: string
          description: CG16_CODICEIDENT - Codice aggiuntivo
          nullable: true
        codicesfed:
          type: string
          description: CG16_CODICESFED - Codicesfed
          nullable: true
        codrichiamo:
          type: integer
          description: CG16_CODRICHIAMO - Codice anagrafica sostitutiva
          format: int32
          nullable: true
        cognome:
          type: string
          description: CG16_COGNOME - Cognome
          nullable: true
        comfisCg01:
          type: string
          description: CG16_COMFIS_CG01 - Codice comune fiscale
          nullable: true
        comnascita:
          type: string
          description: CG16_COMNASCITA - Comune di nascita
          nullable: true
        comnascitaCg01:
          type: string
          description: CG16_COMNASCITA_CG01 - Codice comune nascita
          nullable: true
        datanascita:
          type: string
          description: CG16_DATANASCITA - Data di nascita
          format: date-time
          nullable: true
        datavalid:
          type: string
          description: CG16_DATAVALID - Data validità
          format: date-time
          nullable: true
        dtfinepec:
          type: string
          description: CG16_DTFINEPEC - Data fine procedure esecutive o concorsuali
          format: date-time
          nullable: true
        dtiniziopec:
          type: string
          description: CG16_DTINIZIOPEC - Data inizio procedure esecutive o concorsuali
          format: date-time
          nullable: true
        faxnum:
          type: string
          description: CG16_FAXNUM - Fax
          nullable: true
        flgAnagval:
          type: number
          description: CG16_FLGANAGVAL - Anag. valida
          format: double
        flgFattpa:
          type: integer
          description: >-
            CG16_FLGFATTPA - Attivazione modulo fatturazione elettronica verso
            la Pubblica Amministrazione
          format: int32
        flgNoblacklist:
          type: number
          description: CG16_FLGNOBLACKLIST - Escludi anagrafica da elenco Black List
          format: double
        flgOmonimo:
          type: number
          description: CG16_FLGOMONIMO - Anagr. principale per fusione omonimi
          format: double
        flgPrsfis:
          type: number
          description: CG16_FLGPRSFIS - Persona fisica
          format: double
        idmediaCg99:
          type: number
          description: CG16_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indemail:
          type: string
          description: CG16_INDEMAIL - E-mail
          nullable: true
        indFiscale:
          type: string
          description: CG16_INDFISCALE - Indirizzo fiscale
          nullable: true
        indFiscaleEX:
          type: string
          description: CG16_INDFISCALEEX - Indirizzo fiscale est
          nullable: true
        indirCor:
          type: string
          description: CG16_INDIRCOR - Indirizzo corrispondenza
          nullable: true
        indirCorEX:
          type: string
          description: CG16_INDIRCOREX - Indirizzo corrispondenza esteso
          nullable: true
        indirizzo:
          type: string
          description: CG16_INDIRIZZO - Indirizzo
          nullable: true
        indirizzoEX:
          type: string
          description: CG16_INDIRIZZOEX - Indirizzo esteso
          nullable: true
        indsoggrit:
          type: number
          description: CG16_INDSOGGRIT - Soggetto ritenuta acconto
          format: double
        indweb:
          type: string
          description: CG16_INDWEB - Indirizzo web
          nullable: true
        lastchange:
          type: string
          description: CG16_LASTCHANGE - Data ultima variazione
          format: date-time
          nullable: true
        nome:
          type: string
          description: CG16_NOME - Nome
          nullable: true
        partitaIVA:
          type: string
          description: Partita IVA
          nullable: true
        partiva:
          type: string
          description: CG16_PARTIVA - Partita IVA
          nullable: true
        partivaEst:
          type: string
          description: CG16_PARTIVA_EST - Partita IVA estera
          nullable: true
        prov:
          type: string
          description: CG16_PROV - Prov
          nullable: true
        provcor:
          type: string
          description: CG16_PROVCOR - Provincia corrispondenza
          nullable: true
        provfisc:
          type: string
          description: CG16_PROVFISC - Provincia fiscale
          nullable: true
        provnascita:
          type: string
          description: CG16_PROVNASCITA - Provincia di nascita
          nullable: true
        ragSoAnag:
          type: string
          description: CG16_RAGSOANAG - Ragione sociale
          nullable: true
        ragsoanagex:
          type: string
          description: CG16_RAGSOANAGEX - Ragione sociale estesa
          nullable: true
        ragsocor:
          type: string
          description: CG16_RAGSOCOR - Ragione sociale corrispondenza
          nullable: true
        ragsocorex:
          type: string
          description: CG16_RAGSOCOREX - Ragione sociale corrispondenza estesa
          nullable: true
        ragsofisc:
          type: string
          description: CG16_RAGSOFISC - Ragione sociale fiscale
          nullable: true
        ragsofiscex:
          type: string
          description: CG16_RAGSOFISCEX - Ragione sociale fiscale estesa
          nullable: true
        rapazestCg16:
          type: integer
          description: CG16_RAPAZEST_CG16 - Codice anagrafico rappresentante legale
          format: int32
          nullable: true
        sesso:
          type: number
          description: CG16_SESSO - Sesso
          format: double
        statofed:
          type: string
          description: CG16_STATOFED - Stato federato
          nullable: true
        statofedfisc:
          type: string
          description: CG16_STATOFEDFISC - Stato federato fisc.
          nullable: true
        statofiscCg07:
          type: number
          description: CG16_STATOFISC_CG07 - Codice stato fiscale
          format: double
          nullable: true
        statonascitaCg07:
          type: number
          description: CG16_STATONASCITA_CG07 - Codice stato nascita
          format: double
          nullable: true
        tel1num:
          type: string
          description: CG16_TEL1NUM - Telefono 1
          nullable: true
        tel2num:
          type: string
          description: CG16_TEL2NUM - Telefono 2
          nullable: true
        idExtendedAttributeEntity:
          type: integer
          format: int32
        idExtendedAttributeSubEntity:
          type: integer
          format: int32
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressCODTO'
          nullable: true
        fiscalRepresentative:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        intragroupStructureCO:
          $ref: '#/components/schemas/IntragroupStructureCODTO'
        nationCO_Birth:
          $ref: '#/components/schemas/NationCODTO'
        substitutiveMasterdata:
          $ref: '#/components/schemas/GeneralMasterDataCODTO'
        wtCodeCO:
          $ref: '#/components/schemas/WTCodeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG16_ANAGGEN - GeneralMasterDataCO<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    GetFirstAvailableNumNsProtLetterOfIntentParametersDTO:
      type: object
      properties:
        tipoCS:
          type: number
          format: double
        anno:
          type: number
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    GetFirstAvailableNumNsProtLetterOfIntentResultDTO:
      type: object
      properties:
        numNsProt:
          type: number
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    GetFromCervedParametersDTO:
      type: object
      properties:
        subjectId:
          type: string
          description: >-
            ID dell'anagrafica Cerved da importare o mappare in un'entità di
            GeneralMasterDataCODTO
          nullable: true
        createNew:
          type: boolean
          description: Se TRUE, viene effettuata la creazione dell'anagrafica
        subjectType:
          type: string
          description: >-
            Type of the Cerved master data to import or map in an entity of
            GeneralMasterDataCODTO
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    GetNewCodScaglCSPaymentRangeResultDTO:
      type: object
      properties:
        codScagl:
          type: number
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    Grouping1CODTO:
      required:
        - codRaggrcf1
        - dittaCg18
        - tipocf
      type: object
      properties:
        codRaggrcf1:
          minLength: 1
          type: string
          description: MG31_CODRAGGRCF1 - Raggruppamento 1
        descraggrcf1:
          type: string
          description: MG31_DESCRAGGRCF1 - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG31_DITTA_CG18 - Ditta
          format: double
        idmediaCg99:
          type: number
          description: MG31_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idprov:
          type: integer
          description: MG31_IDPROV - IdProv (Required only in PUT/PATCH)
          format: int32
          nullable: true
        tipocf:
          type: number
          description: MG31_TIPOCF - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG31_RAGGRCF1 - Grouping1CO<br>Proprietà
        chiave:<ul><li><b>CodRaggrcf1</b></li><li><b>DittaCg18</b></li><li><b>Tipocf</b></li></ul>
    Grouping2CODTO:
      required:
        - codRaggrcf2
        - dittaCg18
        - tipocf
      type: object
      properties:
        codRaggrcf2:
          minLength: 1
          type: string
          description: MG32_CODRAGGRCF2 - Raggruppamento 2
        descraggrcf2:
          type: string
          description: MG32_DESCRAGGRCF2 - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG32_DITTA_CG18 - Ditta
          format: double
        idmediaCg99:
          type: number
          description: MG32_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idprov:
          type: integer
          description: MG32_IDPROV - IdProv (Required only in PUT/PATCH)
          format: int32
          nullable: true
        tipocf:
          type: number
          description: MG32_TIPOCF - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG32_RAGGRCF2 - Grouping2CO<br>Proprietà
        chiave:<ul><li><b>CodRaggrcf2</b></li><li><b>DittaCg18</b></li><li><b>Tipocf</b></li></ul>
    Grouping3CODTO:
      required:
        - codRaggrcf3
        - dittaCg18
        - tipocf
      type: object
      properties:
        codRaggrcf3:
          minLength: 1
          type: string
          description: MG33_CODRAGGRCF3 - Raggruppamento 3
        descraggrcf3:
          type: string
          description: MG33_DESCRAGGRCF3 - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG33_DITTA_CG18 - Ditta
          format: double
        idmediaCg99:
          type: number
          description: MG33_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idprov:
          type: integer
          description: MG33_IDPROV - IdProv (Required only in PUT/PATCH)
          format: int32
          nullable: true
        tipocf:
          type: number
          description: MG33_TIPOCF - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG33_RAGGRCF3 - Grouping3CO<br>Proprietà
        chiave:<ul><li><b>CodRaggrcf3</b></li><li><b>DittaCg18</b></li><li><b>Tipocf</b></li></ul>
    ImportAnnualAverageRatesInputDTO:
      type: object
      properties:
        baseCurrencyIsoCode:
          uniqueItems: true
          type: array
          items:
            type: string
          nullable: true
        referenceYear:
          type: integer
          format: int32
        overwrite:
          type: boolean
          nullable: true
      additionalProperties: false
      description: Parametri per l'importazione dei cambi medi annuali
    ImportCurrencyRatesInputDTO:
      type: object
      properties:
        referenceDate:
          type: string
          format: date-time
        numberOfPreviousDays:
          type: integer
          format: int32
          nullable: true
        overwrite:
          type: boolean
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Parametri per l'importazione dei cambi valuta
    ImportCurrencyRatesOutputDTO:
      type: object
      properties:
        operationResult:
          type: boolean
        errorMessages:
          type: array
          items:
            type: string
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Restituisce il risultato dell'operazione di importazione
    ImportMonthlyAverageRatesInputDTO:
      type: object
      properties:
        baseCurrencyIsoCode:
          uniqueItems: true
          type: array
          items:
            type: string
          nullable: true
        referenceYear:
          type: integer
          format: int32
        referenceMonth:
          type: integer
          format: int32
        overwrite:
          type: boolean
          nullable: true
      additionalProperties: false
      description: Parametri per l'importazione dei cambi medi mensili
    ImportTimeSeriesRatesInputDTO:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        baseCurrencyIsoCode:
          type: string
          nullable: true
        currencyIsoCode:
          type: string
          nullable: true
        overwrite:
          type: boolean
          nullable: true
      additionalProperties: false
      description: Parametri per l'importazione delle serie storiche dei cambi valuta
    IntegrativeDeclarationParametersCODTO:
      type: object
      properties:
        mg28Id:
          type: integer
          format: int32
        dataIniVal:
          type: string
          format: date-time
        dataFineVal:
          type: string
          format: date-time
        indTipoDich:
          type: number
          format: double
        ammontare:
          type: number
          format: double
        idIntermediario:
          type: number
          format: double
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    IntegrativeDeclarationResultDTO:
      type: object
      properties:
        opResult:
          $ref: '#/components/schemas/CSLetterOfIntentCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    IntragroupStructureCODTO:
      required:
        - codice
      type: object
      properties:
        codAnagGen:
          type: integer
          description: Codice anagrafica
          format: int32
          nullable: true
        codice:
          type: number
          description: CGC0_CODICE - Codice
          format: double
        codIntercompany:
          type: integer
          description: Codice intercompany
          format: int32
          nullable: true
        descr:
          type: string
          description: CGC0_DESCR - Descrizione
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        IntragroupStructureCO<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    JointlyHeldCOAlreadyExistsParametersDTO:
      type: object
      properties:
        idcliforco:
          type: integer
          format: int32
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    JointlyHeldCOAlreadyExistsResultDTO:
      type: object
      properties:
        alreadyExists:
          type: boolean
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    LanguageCODTO:
      required:
        - codLingua
      type: object
      properties:
        codLingua:
          minLength: 1
          type: string
          description: MG52_CODLINGUA - Codice lingua
        descrlingua:
          type: string
          description: MG52_DESCRLINGUA - Descrizione lingua
          nullable: true
        idmediaCg99:
          type: number
          description: MG52_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        iso639:
          type: string
          description: MG52_ISO639 - Iso639
          nullable: true
        siglalingua:
          type: string
          description: MG52_SIGLALINGUA - Siglalingua
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG52_LINGUE - Lingua<br>Proprietà
        chiave:<ul><li><b>CodLingua</b></li></ul>
    MacroAreaCODTO:
      required:
        - codiceMacroarea
        - dittaCg18
        - tipocf
      type: object
      properties:
        codiceMacroarea:
          minLength: 1
          type: string
          description: MG07_MACROAREA - Macroarea
        descrmacroar:
          type: string
          description: MG07_DESCRMACROAR - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG07_DITTA_CG18 - Ditta
          format: double
        tipocf:
          type: number
          description: MG07_TIPOCF - Tipo Cli/For
          format: double
        areas:
          type: array
          items:
            $ref: '#/components/schemas/AreaCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG07_MACROAREE - Macroarea<br>Proprietà
        chiave:<ul><li><b>CodiceMacroarea</b></li><li><b>DittaCg18</b></li><li><b>Tipocf</b></li></ul>
    MacroCategoryCODTO:
      required:
        - dittaCg18
        - macrocat
        - tipocf
      type: object
      properties:
        descrmacrocat:
          type: string
          description: MG10_DESCRMACROCAT - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG10_DITTA_CG18 - Ditta
          format: double
        macrocat:
          minLength: 1
          type: string
          description: MG10_MACROCAT - Macrocategoria
        tipocf:
          type: number
          description: MG10_TIPOCF - Tipo Cli/For
          format: double
        categorie:
          type: array
          items:
            $ref: '#/components/schemas/CategoryCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG10_MACROCAT - MacroCategoryCO<br>Proprietà
        chiave:<ul><li><b>DittaCg18</b></li><li><b>Macrocat</b></li><li><b>Tipocf</b></li></ul>
    NationCODTO:
      required:
        - codice
        - flgIban
        - indTipostato
      type: object
      properties:
        a2iso3166:
          type: string
          description: CG07_A2ISO3166 - Alpha-2 ISO 3166
          nullable: true
        a3iso3166:
          type: string
          description: CG07_A3ISO3166 - Alpha-3 ISO 3166
          nullable: true
        codice:
          type: number
          description: CG07_CODICE - Codice
          format: double
        codiceCg08:
          type: string
          description: CG07_CODICE_CG08 - CodiceCg08
          nullable: true
        codIso:
          type: string
          description: CG07_CODISO - Codice ISO
          nullable: true
        codSian:
          type: number
          description: CG07_CODSIAN - Codice SIAN
          format: double
          nullable: true
        crtpiva:
          type: string
          description: CG07_CRTPIVA - Caratteri lunghezza partita IVA (separati da /)
          nullable: true
        datacee:
          type: string
          description: CG07_DATACEE - Data ingresso CEE
          format: date-time
          nullable: true
        datafinblacklist:
          type: string
          description: CG07_DATAFINBLACKLIST - Data uscita Black List
          format: date-time
          nullable: true
        datainiblacklist:
          type: string
          description: CG07_DATAINIBLACKLIST - Data ingresso Black List
          format: date-time
          nullable: true
        descr:
          type: string
          description: CG07_DESCR - Descrizione
          nullable: true
        desiso3166:
          type: string
          description: CG07_DESISO3166 - Descrizione Stato ISO 3166
          nullable: true
        flgIban:
          type: integer
          description: CG07_FLGIBAN - Utilizzo IBAN
          format: int32
        flgSepa:
          type: integer
          description: CG07_FLGSEPA - Utilizzo standard SEPA
          format: int32
          nullable: true
        idmediaCg99:
          type: number
          description: CG07_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indTipostato:
          type: number
          description: CG07_INDTIPOSTATO - Tipo Nazione
          format: double
        leniban:
          type: integer
          description: CG07_LENIBAN - Leniban
          format: int32
          nullable: true
        numiso3166:
          type: string
          description: CG07_NUMISO3166 - Number ISO 3166
          nullable: true
        currencyCO:
          $ref: '#/components/schemas/CurrencyCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG07_TABSTATIEST - Stati esteri<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    NatureAssCODTO:
      required:
        - codice
        - descr
        - idassosw
        - idCg2m
      type: object
      properties:
        codice:
          minLength: 1
          type: string
          description: CG2N_CODICE - Codice
        datafineval:
          type: string
          description: CG2N_DATAFINEVAL - Datafineval
          format: date-time
          nullable: true
        datainival:
          type: string
          description: CG2N_DATAINIVAL - Datainival
          format: date-time
          nullable: true
        descr:
          minLength: 1
          type: string
          description: CG2N_DESCR - Descrizione
        idassosw:
          type: integer
          description: CG2N_IDASSOSW - Idassosw
          format: int32
        idCg2m:
          type: integer
          description: CG2N_ID_CG2M - IdCg2m
          format: int32
        rowversion:
          type: string
          description: CG2N_ROWVERSION - Rowversion
          format: byte
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG2N_NATURAASSOSW - NatureAssCO<br>Proprietà
        chiave:<ul><li><b>Idassosw</b></li></ul>
    NatureEsCODTO:
      required:
        - codice
        - descr
        - id
      type: object
      properties:
        codice:
          minLength: 1
          type: string
          description: CG2M_CODICE - Codice
        datafineval:
          type: string
          description: CG2M_DATAFINEVAL - Datafineval
          format: date-time
          nullable: true
        datainival:
          type: string
          description: CG2M_DATAINIVAL - Datainival
          format: date-time
          nullable: true
        descr:
          minLength: 1
          type: string
          description: CG2M_DESCR - Descrizione
        id:
          type: integer
          description: CG2M_ID - Codice
          format: int32
        rowversion:
          type: string
          description: CG2M_ROWVERSION - Rowversion
          format: byte
          nullable: true
        natureAssCO:
          type: array
          items:
            $ref: '#/components/schemas/NatureAssCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: CG2M_NATURA - NatureEsCO<br>Proprietà chiave:<ul><li><b>Id</b></li></ul>
    NumDocOrigProposalDTO:
      type: object
      properties:
        updEnabled:
          type: boolean
        numDocOrig:
          type: string
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: NumDocOrig proposal and updatable info's
    OfficeCODTO:
      required:
        - codice
        - dittaCg18
        - indDimcentrocomm
      type: object
      properties:
        cap:
          type: string
          description: CG31_CAP - Cap
          nullable: true
        citta:
          type: string
          description: CG31_CITTA - Citta
          nullable: true
        codice:
          type: number
          description: CG31_CODICE - Sede
          format: double
        dittaCg18:
          type: number
          description: CG31_DITTA_CG18 - Ditta
          format: double
        idmediaCg99:
          type: number
          description: CG31_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        indDimcentrocomm:
          type: number
          description: CG31_INDDIMCENTROCOMM - Dimensione centro commerciale
          format: double
        indIrizzo:
          type: string
          description: CG31_INDIRIZZO - Indirizzo
          nullable: true
        numerorea:
          type: string
          description: CG31_NUMEROREA - Numero REA
          nullable: true
        progRea:
          type: number
          description: CG31_PROGREA - Progressivo
          format: double
          nullable: true
        prov:
          type: string
          description: CG31_PROV - PV
          nullable: true
        rowversion:
          type: string
          description: CG31_ROWVERSION - Rowversion
          format: byte
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG31_ANADITTASEDI - Sedi azienda<br>Proprietà
        chiave:<ul><li><b>Codice</b></li><li><b>DittaCg18</b></li></ul>
    OfficePACODTO:
      required:
        - codDestin
        - codice
        - codiceCg16
        - flgPreferenziale
        - indTypeb2b
        - nome
        - tipocfCg44
      type: object
      properties:
        cap:
          type: string
          description: CG1M_CAP - Cap
          nullable: true
        codDestin:
          minLength: 1
          type: string
          description: CG1M_CODDESTIN - CodDestin
        codice:
          minLength: 1
          type: string
          description: CG1M_CODICE - Codice
        codiceCg16:
          type: integer
          description: CG1M_CODICE_CG16 - CodiceCg16
          format: int32
        comune:
          type: string
          description: CG1M_COMUNE - Comune
          nullable: true
        flgPreferenziale:
          type: integer
          description: CG1M_FLGPREFERENZIALE - FlgPreferenziale
          format: int32
        idprovincia:
          type: integer
          description: CG1M_IDPROVINCIA - Idprovincia
          format: int32
          nullable: true
        idregione:
          type: integer
          description: CG1M_IDREGIONE - Idregione
          format: int32
          nullable: true
        indIrizzo:
          type: string
          description: CG1M_INDIRIZZO - IndIrizzo
          nullable: true
        indTypeb2b:
          type: integer
          description: CG1M_INDTYPEB2B - IndTypeb2b
          format: int32
        lastupdateB2b:
          type: string
          description: CG1M_LASTUPDATE_B2B - LastupdateB2b
          format: date-time
          nullable: true
        nome:
          minLength: 1
          type: string
          description: CG1M_NOME - Nome
        tipocfCg44:
          type: number
          description: CG1M_TIPOCF_CG44 - TipocfCg44
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG1M_UFFICIOPA - OfficePACO<br>Proprietà
        chiave:<ul><li><b>CodDestin</b></li><li><b>Codice</b></li><li><b>CodiceCg16</b></li><li><b>TipocfCg44</b></li></ul>
    PaymentTermCODTO:
      required:
        - codPag
        - flgDesc
        - flgDisgg
        - flgPrefatt
        - flgPrefpass
        - flgStornoiva
      type: object
      properties:
        codPag:
          minLength: 1
          type: string
          description: CG62_CODPAG - Codice
        descPag:
          type: string
          description: CG62_DESCPAG - Descrizione
          nullable: true
        desPagAnal:
          type: string
          description: CG62_DESPAGANAL - Descrizione analitica
          nullable: true
        flgDesc:
          type: number
          description: 'CG62_FLGDESC - Descriz. automatica '
          format: double
        flgDisgg:
          type: number
          description: >-
            CG62_FLGDISGG - Non applicare giorni fissi cliente/fornitore -
            slittamento generale e cliente/fornitore
          format: double
        flgPrefatt:
          type: integer
          description: CG62_FLGPREFATT - Preferenziale ciclo attivo
          format: int32
        flgPrefpass:
          type: integer
          description: CG62_FLGPREFPASS - Preferenziale ciclo passivo
          format: int32
        flgStornoiva:
          type: number
          description: CG62_FLGSTORNOIVA - FlgStornoiva
          format: double
        id:
          type: integer
          description: CG62_ID - Id (Required only in PUT/PATCH)
          format: int64
          nullable: true
        rowversion:
          type: string
          description: CG62_ROWVERSION - RowVersion
          format: byte
          nullable: true
        scart26:
          type: number
          description: CG62_SCART26 - Sconto Art.26 importo
          format: double
          nullable: true
        scpercart26:
          type: number
          description: CG62_SCPERCART26 - Sconto Art.26 %
          format: double
          nullable: true
        scpercas:
          type: number
          description: CG62_SCPERCAS - Sc. cassa
          format: double
          nullable: true
        scpermer1:
          type: number
          description: CG62_SCPERMER1 - Sc. merce 1
          format: double
          nullable: true
        scpermer2:
          type: number
          description: CG62_SCPERMER2 - Sc. merce 2
          format: double
          nullable: true
        idExtendedAttributeEntity:
          type: integer
          format: int32
        idExtendedAttributeSubEntity:
          type: integer
          format: int32
        paymentTermDetailCO:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTermDetailCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG62_CONDPAGDES - PaymentTermCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    PaymentTermDetailCODTO:
      required:
        - codPagCg62
        - flgFrpercimp
        - flgFrperciva
        - idCg62
        - indDatarif
        - indImpfix
        - indTipocalend
        - indTipodecor
        - prog
        - tipoeff
      type: object
      properties:
        aggfix1:
          type: number
          description: CG63_AGGFIX1 - Aggfix1
          format: double
          nullable: true
        aggfix2:
          type: number
          description: CG63_AGGFIX2 - Aggfix2
          format: double
          nullable: true
        codPagCg62:
          minLength: 1
          type: string
          description: CG63_CODPAG_CG62 - CodPagCg62
        daggfix1:
          type: number
          description: CG63_DAGGFIX1 - Daggfix1
          format: double
          nullable: true
        daggfix2:
          type: number
          description: CG63_DAGGFIX2 - Daggfix2
          format: double
          nullable: true
        el1frimp:
          type: number
          description: CG63_EL1FRIMP -  Num.
          format: double
          nullable: true
        el1friva:
          type: number
          description: CG63_EL1FRIVA -  Num.
          format: double
          nullable: true
        el2frimp:
          type: number
          description: CG63_EL2FRIMP - Den.
          format: double
          nullable: true
        el2friva:
          type: number
          description: CG63_EL2FRIVA - Den.
          format: double
          nullable: true
        flgFrpercimp:
          type: number
          description: CG63_FLGFRPERCIMP - Fr./% imp.
          format: double
        flgFrperciva:
          type: number
          description: CG63_FLGFRPERCIVA - Fr./% iva.
          format: double
        ggdecor:
          type: number
          description: CG63_GGDECOR - gg dec.
          format: double
          nullable: true
        ggmmfix:
          type: number
          description: CG63_GGMMFIX - Ggmmfix
          format: double
          nullable: true
        ggscadfix1:
          type: number
          description: CG63_GGSCADFIX1 - Ggscadfix1
          format: double
          nullable: true
        ggscadfix2:
          type: number
          description: CG63_GGSCADFIX2 - Ggscadfix2
          format: double
          nullable: true
        id:
          type: integer
          description: CG63_ID - Id (Required only in PUT/PATCH)
          format: int64
          nullable: true
        idCg62:
          type: integer
          description: CG63_ID_CG62 - IdCg62
          format: int64
        idCg64:
          type: integer
          description: CG63_ID_CG64 - IdCg64
          format: int64
          nullable: true
        imporfix:
          type: number
          description: CG63_IMPORFIX - Imporfix
          format: double
          nullable: true
        indDatarif:
          type: number
          description: CG63_INDDATARIF - Rif. decorrenza
          format: double
        indImpfix:
          type: number
          description: CG63_INDIMPFIX - IndImpfix
          format: double
        indTipocalend:
          type: integer
          description: CG63_INDTIPOCALEND - IndTipocalend
          format: int32
        indTipodecor:
          type: number
          description: CG63_INDTIPODECOR - Tipo decorrenza
          format: double
        percimp:
          type: number
          description: CG63_PERCIMP - % Imp.
          format: double
          nullable: true
        perciva:
          type: number
          description: CG63_PERCIVA - % IVA
          format: double
          nullable: true
        prog:
          type: number
          description: CG63_PROG - Rata
          format: double
        rowversion:
          type: string
          description: CG63_ROWVERSION - RowVersion
          format: byte
          nullable: true
        tipoeff:
          type: number
          description: CG63_TIPOEFF - Tipo effetto
          format: double
        subTypeCO:
          $ref: '#/components/schemas/SubTypeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG63_CONDPAGDET - PaymentTermDetailCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    PaymentTermDetailCOParametersDTO:
      type: object
      properties:
        idCg62:
          type: integer
          format: int32
        isInStage:
          type: boolean
        stageGuid:
          type: string
          format: uuid
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    PaymentTermDetailCalculationResultCODTO:
      type: object
      properties:
        sumImp:
          type: number
          format: double
        sumIva:
          type: number
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    PaymentTermDuplicationParametersCODTO:
      type: object
      properties:
        sourcePaymentTermId:
          type: integer
          format: int64
        targetPaymentTermCode:
          type: string
          nullable: true
        targetPaymentTermCodeDescription:
          type: string
          nullable: true
        isDuplLangDescriptions:
          type: boolean
        isDuplExtendedAttribute:
          type: boolean
      additionalProperties: false
    ProtocolCalculationResultDTO:
      type: object
      properties:
        executionResult:
          type: boolean
        numdoc:
          type: number
          format: double
          nullable: true
        tipodocrif:
          type: number
          format: double
          nullable: true
        datadoc:
          type: string
          format: date-time
          nullable: true
        numDocOrigData:
          $ref: '#/components/schemas/NumDocOrigProposalDTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Results of the next protocol calculation
    SearchComparer:
      enum:
        - 0
        - 1
        - 10
        - 11
        - 12
        - 13
        - 20
        - 21
        - 30
        - 40
        - 50
        - 51
        - 60
        - 61
        - 70
        - 71
      type: integer
      description: >-
        Comparer operator: Equal = 0, NotEqual = 1, GreaterThan = 10, LessThan =
        11, GreaterOrEqualThan = 12, LessOrEqualThan = 13, Contains = 20,
        NotContains = 21, StartsWith = 30, EndsWith = 40, In = 50, NotIn = 51,
        Between = 60, NotBetween = 61Null = 70NotNull = 71
      format: int32
    SearchDTO:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SearchGroupDTO'
        parameters:
          type: object
          additionalProperties: {}
          description: List of key value filters that will be applied to the query
          nullable: true
        orderingProperties:
          type: object
          additionalProperties: {}
          description: '"Order by" properties list'
          format: IDictionary<string, long>
          nullable: true
        pageSize:
          type: integer
          description: Page number to retun
          format: int32
        pageNumber:
          type: integer
          description: Number of elements per page to return
          format: int32
        selectList:
          type: string
          nullable: true
        visibleColumns:
          type: string
          nullable: true
        idRow:
          type: string
          nullable: true
      additionalProperties: false
      description: DTO that contains the filter criteria
    SearchElementDTO:
      required:
        - comparer
        - propertyName
        - value
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchNodeDTO'
      properties:
        propertyName:
          minLength: 1
          type: string
          description: Property on witch apply the filter
        comparer:
          $ref: '#/components/schemas/SearchComparer'
        value:
          $ref: '#/components/schemas/SearchNodeValueDTO'
      additionalProperties: false
      description: DTO that identifies a search criteria
    SearchGroupDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchNodeDTO'
      properties:
        items:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/SearchNodeDTO'
              - $ref: '#/components/schemas/SearchElementDTO'
              - $ref: '#/components/schemas/SearchGroupDTO'
            description: DTO that identifies a search criteria node (abstract)
          description: >-
            Items list to apply: any element can be a 'SearchGroupDTO' or a
            'SearchElementDTO'
          nullable: true
      additionalProperties: false
      description: DTO that identifies a group of search criteria
    SearchLogicalOperators:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: 'Logical operator: And = 1, Or = 2, Not = 3'
      format: int32
    SearchNodeDTO:
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/SearchLogicalOperators'
      additionalProperties: false
      description: DTO that identifies a search criteria node (abstract)
    SearchNodeValueDTO:
      type: object
      additionalProperties: false
    SectionalMasterDataCODTO:
      required:
        - dittaCg18
        - flgNoLiqIva
        - indIntra1213
        - indRegione
        - indTipologia
        - sezionale
      type: object
      properties:
        caustcoll:
          type: string
          description: CG68_CAUSTCOLL - Caustcoll
          nullable: true
        descsez:
          type: string
          description: CG68_DESCSEZ - Descsez
          nullable: true
        dittaCg18:
          type: number
          description: CG68_DITTA_CG18 - Ditta
          format: double
        flgNoLiqIva:
          type: integer
          description: CG68_FLGNOLIQIVA - FlgNoLiqIva
          format: int32
        idagentecoll:
          type: integer
          description: CG68_IDAGENTECOLL - Idagentecoll
          format: int32
          nullable: true
        idprov:
          type: number
          description: CG68_IDPROV - IdProv (Required only in PUT/PATCH)
          format: double
          nullable: true
        indIntra1213:
          type: number
          description: CG68_INDINTRA1213 - IndIntra1213
          format: double
        indRegione:
          type: number
          description: CG68_INDREGIONE - IndRegione
          format: double
        indTipologia:
          type: number
          description: CG68_INDTIPOLOGIA - IndTipologia
          format: double
        puntovenCg7a:
          type: number
          description: CG68_PUNTOVEN_CG7A - PuntovenCg7a
          format: double
          nullable: true
        sezionale:
          minLength: 1
          type: string
          description: CG68_SEZIONALE - Sezionale
        storeCO:
          $ref: '#/components/schemas/StoreCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG68_NUMERDESC - SectionalMasterDataCO<br>Proprietà
        chiave:<ul><li><b>DittaCg18</b></li><li><b>Sezionale</b></li></ul>
    SectionalMasterDataProposalInfoDTO:
      type: object
      properties:
        causale:
          type: string
          nullable: true
        codSez:
          type: string
          nullable: true
        descSez:
          type: string
          nullable: true
        indTipologia:
          type: number
          format: double
          nullable: true
        protocolData:
          $ref: '#/components/schemas/ProtocolCalculationResultDTO'
        codAttivita:
          type: number
          format: double
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Sectional requested and any associated protocol
    SectionalMasterDataProposalParametersDTO:
      type: object
      properties:
        anno:
          type: number
          format: double
        causale:
          type: string
          nullable: true
        codAttivita:
          type: number
          format: double
          nullable: true
        calcolaProtocollo:
          type: boolean
        tipoMovimento:
          type: number
          format: double
        ignoraCodAttivita:
          type: boolean
        ignoraProtocollazioneMovimenti:
          type: boolean
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        It proposes the sectional/s and any protocols based on the parameters
        provided
    SectionalMasterDataProposalResultDTO:
      type: object
      properties:
        executionResult:
          type: boolean
        sectionalData:
          $ref: '#/components/schemas/SectionalMasterDataProposalInfoDTO'
        selfInvoiceSectionalData:
          $ref: '#/components/schemas/SectionalMasterDataProposalInfoDTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Results of the recovery of the requested sectional (s)
    SendingLetterResultDTO:
      type: object
      properties:
        opResult:
          type: boolean
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendingLettersToInsertParametersCODTO:
      type: object
      properties:
        sendingLettersToInsert:
          type: array
          items:
            $ref: '#/components/schemas/SendingLettersToInsertRowCODTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendingLettersToInsertRowCODTO:
      type: object
      properties:
        idCliFor:
          type: integer
          format: int32
        annoCompetenza:
          type: integer
          format: int32
        validaDa:
          type: string
          format: date-time
        validaA:
          type: string
          format: date-time
        dataStampa:
          type: string
          format: date-time
        indTipoDich:
          type: number
          format: double
        ammontare:
          type: number
          format: double
        dogana:
          type: string
          nullable: true
        ivaEsenz:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        codRap:
          type: integer
          format: int32
          nullable: true
        codCarica:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    StoreCODTO:
      required:
        - dittaCg18
        - puntoven
      type: object
      properties:
        descrizione:
          type: string
          description: CG7A_DESCRIZIONE - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: CG7A_DITTA_CG18 - Ditta
          format: double
        puntoven:
          type: number
          description: CG7A_PUNTOVEN - Puntoven
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG7A_PUNTIVENDITA - StoreCO<br>Proprietà
        chiave:<ul><li><b>DittaCg18</b></li><li><b>Puntoven</b></li></ul>
    StringObjectKeyValuePair:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    SubCategoryCODTO:
      required:
        - categMg11
        - dittaCg18
        - macrocatMg11
        - sottcat
        - tipocfMg11
      type: object
      properties:
        categMg11:
          minLength: 1
          type: string
          description: MG12_CATEG_MG11 - Categoria
        descrsottocat:
          type: string
          description: MG12_DESCRSOTTOCAT - Descrizione
          nullable: true
        dittaCg18:
          type: number
          description: MG12_DITTA_CG18 - Ditta
          format: double
        macrocatMg11:
          minLength: 1
          type: string
          description: MG12_MACROCAT_MG11 - Macrocategoria
        sottcat:
          minLength: 1
          type: string
          description: MG12_SOTTCAT - Sottocategoria
        tipocfMg11:
          type: number
          description: MG12_TIPOCF_MG11 - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG12_SOTTOCAT - SubCategoryCO<br>Proprietà
        chiave:<ul><li><b>CategMg11</b></li><li><b>DittaCg18</b></li><li><b>MacrocatMg11</b></li><li><b>Sottcat</b></li><li><b>TipocfMg11</b></li></ul>
    SubTypeCODTO:
      required:
        - codStipoeff
        - flgAssegno
        - indModfatturapa
        - tipoeff
      type: object
      properties:
        codiceCg07:
          type: number
          description: CG64_CODICE_CG07 - Nazione di incasso
          format: double
          nullable: true
        codPaguc:
          type: string
          description: CG64_CODPAGUC - Codice pagamento estero
          nullable: true
        codStipoeff:
          type: number
          description: CG64_CODSTIPOEFF - Sottotipo effetto
          format: double
        descstipo:
          type: string
          description: CG64_DESCSTIPO - Descrizione sottotipo effetto
          nullable: true
        flgAssegno:
          type: integer
          description: CG64_FLGASSEGNO - Assegno
          format: int32
        ggoffset:
          type: number
          description: CG64_GGOFFSET - Giorni spostamento scadenza
          format: double
          nullable: true
        id:
          type: integer
          description: CG64_ID - ID (Required only in PUT/PATCH)
          format: int64
          nullable: true
        indModfatturapa:
          type: integer
          description: CG64_INDMODFATTURAPA - Modalità fattura elettronica
          format: int32
        rowversion:
          type: string
          description: CG64_ROWVERSION - RowVersion
          format: byte
          nullable: true
        tipoeff:
          type: number
          description: CG64_TIPOEFF - Tipo scadenza
          format: double
        foreignPaymentCodeCO:
          $ref: '#/components/schemas/ForeignPaymentCodeCODTO'
        nationCO:
          $ref: '#/components/schemas/NationCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG64_SOTTOTIPO - SubTypeCO<br>Proprietà
        chiave:<ul><li><b>Id</b></li></ul>
    UpdateParametersCODTO:
      type: object
      properties:
        mg28IdsToUpdate:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        idIntermediario:
          type: number
          format: double
          nullable: true
        tipoPlafond:
          type: number
          format: double
        flgDichivapres:
          type: integer
          format: int32
        flgEsport:
          type: integer
          format: int32
        flgCessintra:
          type: integer
          format: int32
        flgCessanmarino:
          type: integer
          format: int32
        flgOperassim:
          type: integer
          format: int32
        flgOperstraord:
          type: integer
          format: int32
        impeData:
          type: string
          format: date-time
          nullable: true
        mgflId:
          type: integer
          format: int32
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdateParametersResultDTO:
      type: object
      properties:
        opResult:
          type: boolean
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    ValidateDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ValidationResultDTO'
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: DTO for data validation task
    ValidationResultDTO:
      type: object
      properties:
        message:
          type: string
          description: Validation message
          nullable: true
        warningCode:
          type: integer
          format: int64
          nullable: true
        isWarning:
          type: boolean
          description: It means the message is a warning
        isError:
          type: boolean
          description: It means the message is an error
        dtoName:
          type: string
          description: the DTO name who the property belong
          nullable: true
        dtoPropertyName:
          type: string
          description: The DTO invalid property name
          nullable: true
        entityPropertyPath:
          type: string
          nullable: true
      additionalProperties: false
      description: DTO for property validation task
    VatCodeCODTO:
      required:
        - codice
        - codPlafond
        - descrizione
        - flgAgri
        - flgAllclifor
        - flgAssport398
        - flgAutoue
        - flgCorrVent
        - flgEscludiblacklist
        - flgImpostadibollo
        - flgIndet
        - flgIvaedit
        - flgMonofasersm
        - flgMossgest
        - flgMossrid
        - flgNotvar
        - flgSospimp
        - indStaper
        - indtipopart
        - tipologia
      type: object
      properties:
        aliqivavent:
          type: number
          description: CG28_ALIQIVAVENT - % acquisti in ventilazione
          format: double
          nullable: true
        annotazioni:
          type: string
          description: >-
            CG28_ANNOTAZIONI - Annotazioni su fatture di vendita e sui registri
            IVA art.21 comma 6 DPR 633/72
          nullable: true
        codice:
          minLength: 1
          type: string
          description: CG28_CODICE - Codice aliquota
        codiceagr:
          type: string
          description: CG28_CODICEAGR - Codice IVA per compensazione agricoltura
          nullable: true
        codiceOss:
          type: string
          description: CG28_OSSCOD_CG28 - Codice IVA correlato
          nullable: true
        codPlafond:
          type: number
          description: CG28_CODPLAFOND - Plafond
          format: double
        descrizione:
          minLength: 1
          type: string
          description: CG28_DESCR - Descrizione
        flgAgri:
          type: number
          description: CG28_FLGAGRI - Indicare se codice IVA utilizzato per agricoltura
          format: double
        flgAllclifor:
          type: number
          description: >-
            CG28_FLGALLCLIFOR - Progressivi aliquota IVA inclusi negli allegati
            clienti fornitori
          format: double
        flgAssport398:
          type: number
          description: CG28_FLGASSPORT398 - Soc. sportiva dilettantistica (L.398/91)
          format: double
        flgAutoue:
          type: number
          description: CG28_FLGAUTOUE - Vendita auto UE L. 286
          format: double
        flgCorrVent:
          type: number
          description: >-
            CG28_FLGCORRVENT - Aliquota IVA utilizzata per la registrazione dei
            corrispettivi da ventilare
          format: double
        flgEscludiblacklist:
          type: number
          description: CG28_FLGESCLUDIBLACKLIST - Escludi da black list
          format: double
        flgImpostadibollo:
          type: integer
          description: CG28_FLGIMPOSTADIBOLLO - Imposta di bollo applicabile
          format: int32
        flgIndet:
          type: number
          description: CG28_FLGINDET - IVA indetraibile
          format: double
        flgIvaedit:
          type: number
          description: CG28_FLGIVAEDIT - Indicare se codice IVA utilizzato per editoria
          format: double
        flgMonofasersm:
          type: number
          description: CG28_FLGMONOFASERSM - Monofase Repubblica di San Marino
          format: double
        flgMossgest:
          type: integer
          description: CG28_FLGMOSSGEST - One Stop Shop (OSS)
          format: int32
        flgMossrid:
          type: integer
          description: CG28_FLGMOSSRID - Aliquota ridotta
          format: int32
        flgNotvar:
          type: number
          description: >-
            CG28_FLGNOTVAR - Indicare se codice IVA utilizzato per note
            variazioni IVA
          format: double
        flgSospimp:
          type: number
          description: CG28_FLGSOSPIMP - IVA esigibilità differita
          format: double
        idprov:
          type: number
          description: CG28_IDPROV - IdProv (Required only in PUT/PATCH)
          format: double
          nullable: true
        impostamonofasersm:
          type: number
          description: CG28_IMPOSTAMONOFASERSM - Importo imposta fissa
          format: double
          nullable: true
        indNatassoswCg2n:
          type: integer
          description: CG28_INDNATASSOSW_CG2N - IndNatassoswCg2n
          format: int32
          nullable: true
        indNatura:
          type: integer
          description: CG28_INDNATURA - Natura
          format: int32
          nullable: true
        indStaper:
          type: number
          description: CG28_INDSTAPER - Standard/Pers.
          format: double
        indtipopart:
          type: number
          description: CG28_INDTIPOPART - Indtipopart
          format: double
        mosscodCg07:
          type: number
          description: CG28_MOSSCOD_CG07 - Codice Stato
          format: double
          nullable: true
        mossperc:
          type: number
          description: CG28_MOSSPERC - VAT rate (%)
          format: double
          nullable: true
        note:
          type: string
          description: CG28_NOTE - Note
          nullable: true
        percforf:
          type: number
          description: CG28_PERCFORF - % forfetizzazione editoria/agricoltura
          format: double
          nullable: true
        percindet:
          type: number
          description: CG28_PERCINDET - % assoggettamento ad indetraibilità
          format: double
          nullable: true
        perciva:
          type: number
          description: CG28_PERCIVA - % assoggettamento aliquota
          format: double
          nullable: true
        percmonofasersm:
          type: number
          description: CG28_PERCMONOFASERSM - % Monofase
          format: double
          nullable: true
        rowVersion:
          type: string
          description: CG28_ROWVERSION - RowVersion
          format: byte
          nullable: true
        tipologia:
          type: number
          description: CG28_TIPOLOGIA - Tipologia
          format: double
        verslynfa:
          type: string
          description: CG28_VERSLYNFA - Verslynfa
          nullable: true
        idExtendedAttributeEntity:
          type: integer
          format: int32
        idExtendedAttributeSubEntity:
          type: integer
          format: int32
        nationCO:
          $ref: '#/components/schemas/NationCODTO'
        natureAssCO:
          $ref: '#/components/schemas/NatureAssCODTO'
        natureEsCO:
          $ref: '#/components/schemas/NatureEsCODTO'
        vatCodeCOAgr:
          $ref: '#/components/schemas/VatCodeCODTO'
        vatCodeCOOss:
          $ref: '#/components/schemas/VatCodeCODTO'
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG28_TABCODIVA - Codice IVA<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    VatCodeDuplicationParametersCODTO:
      type: object
      properties:
        sourceVatCode:
          type: string
          nullable: true
        newVatCode:
          type: string
          nullable: true
        newVatCodeDescription:
          type: string
          nullable: true
        isDuplLangDescriptions:
          type: boolean
        isDuplExtendedAttribute:
          type: boolean
      additionalProperties: false
    VerificaMovimentazioneProgressiviResultDTO:
      type: object
      properties:
        codice:
          type: string
          nullable: true
        result:
          type: boolean
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: Result of the progressive movement check
    WTCodeCODTO:
      required:
        - codice
        - flgGlad
        - flgMinimi
        - flgProteo360
        - flgRegagevo
        - flgSosprit
        - gcprev
        - indCodattglad
        - indTipocassa
      type: object
      properties:
        causdd1:
          type: string
          description: CG15_CAUSDD1 - Causale
          nullable: true
        codFiscPrev:
          type: string
          description: CG15_CODFISCPREV - Codice fiscale ente previdenziale
          nullable: true
        codice:
          minLength: 1
          type: string
          description: CG15_CODICE - Codice
        codNonsog:
          type: number
          description: CG15_CODNONSOG - Codice reddito non soggetto cu
          format: double
          nullable: true
        codPrev:
          type: string
          description: CG15_CODPREV - Cod. ente previdenziale cu
          nullable: true
        codTribrp:
          type: string
          description: CG15_CODTRIBRP - Trib.RP
          nullable: true
        codTributo:
          type: string
          description: CG15_CODTRIBUTO - Trib.RA
          nullable: true
        descr:
          type: string
          description: CG15_DESCR - Descrizione
          nullable: true
        flgGlad:
          type: number
          description: CG15_FLGGLAD - GLA/D
          format: double
        flgMinimi:
          type: integer
          description: CG15_FLGMINIMI - FlgMinimi
          format: int32
        flgPignTerzi:
          type: number
          description: CG15_FLGPIGNTERZI - Pignoramento presso terzi
          format: double
          nullable: true
        flgProteo360:
          type: number
          description: CG15_FLGPROTEO360 - FlgProteo360
          format: double
        flgRegagevo:
          type: number
          description: CG15_FLGREGAGEVO - R.Ag.
          format: double
        flgRitImposta:
          type: number
          description: CG15_FLGRITIMPOSTA - Ritenuta a titolo d'imposta
          format: double
          nullable: true
        flgSosprit:
          type: integer
          description: CG15_FLGSOSPRIT - FlgSosprit
          format: int32
        gcprev:
          type: integer
          description: CG15_GCPREV - g/c contributi previdenziali
          format: int32
        idmediaCg99:
          type: number
          description: CG15_IDMEDIA_CG99 - ID HyperMedia
          format: double
          nullable: true
        idprov:
          type: number
          description: CG15_IDPROV - IdProv (Required only in PUT/PATCH)
          format: double
          nullable: true
        indCodattglad:
          type: number
          description: CG15_INDCODATTGLAD - Attività modello GLA/D
          format: double
        indTipocassa:
          type: integer
          description: CG15_INDTIPOCASSA - Tipo cassa
          format: int32
        inpsivs:
          type: number
          description: CG15_INPSIVS - % R.P.
          format: double
          nullable: true
        percbaseimp:
          type: number
          description: CG15_PERCBASEIMP - % B.imp.
          format: double
          nullable: true
        percci:
          type: number
          description: CG15_PERCCI - % C.I.
          format: double
          nullable: true
        percra:
          type: number
          description: CG15_PERCRA - % R.A.
          format: double
          nullable: true
        percripaz:
          type: number
          description: CG15_PERCRIPAZ - % Az.
          format: double
          nullable: true
        percRipPerc:
          type: number
          description: '% Perc.'
          format: double
          nullable: true
        rowversion:
          type: string
          description: CG15_ROWVERSION - Rowversion
          format: byte
          nullable: true
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        CG15_TABCAUPREST - WTCodeCO<br>Proprietà
        chiave:<ul><li><b>Codice</b></li></ul>
    ZoneCODTO:
      required:
        - areaMg08
        - codiceZona
        - descrzona
        - dittaCg18
        - macroareaMg08
        - tipocfMg08
      type: object
      properties:
        areaMg08:
          minLength: 1
          type: string
          description: MG09_AREA_MG08 - Area
        codiceZona:
          minLength: 1
          type: string
          description: MG09_ZONA - Zona
        descrzona:
          minLength: 1
          type: string
          description: MG09_DESCRZONA - Descrizione
        dittaCg18:
          type: number
          description: MG09_DITTA_CG18 - Ditta
          format: double
        macroareaMg08:
          minLength: 1
          type: string
          description: MG09_MACROAREA_MG08 - Macroarea
        tipocfMg08:
          type: number
          description: MG09_TIPOCF_MG08 - Tipo Cli/For
          format: double
        extensionData:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
          nullable: true
        additionalData:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
      description: >-
        MG09_ZONE - ZoneCO<br>Proprietà
        chiave:<ul><li><b>AreaMg08</b></li><li><b>CodiceZona</b></li><li><b>DittaCg18</b></li><li><b>MacroareaMg08</b></li><li><b>TipocfMg08</b></li></ul>
  securitySchemes:
    Basic:
      type: http
      description: Basic Authorization header.
      scheme: Basic
    Bearer:
      type: http
      description: "Bearer Authorization header.\r\n\r\nEnter your token in the text input below."
      scheme: Bearer
      bearerFormat: JWT
security:
  - Basic:
      - Basic
  - Bearer:
      - Bearer
tags:
  - name: AccountingReasonCodeCO
    description: Collection of services for Accounting reason Codes
  - name: AgencyCO
    description: Collection of services for Bank agencies (branch code)
  - name: BankCO
    description: Collection of services for Banks (bank identification code)
  - name: GeneralMasterDataCO
    description: Collection of services for General Master data
  - name: LanguageCO
    description: Collection of services for Languages
  - name: NationCO
    description: Collection of services for Nations
  - name: OfficeCO
    description: Collection of services for Company Offices
  - name: AccountingReasonCodeCO
    description: Collection of services for Accounting reason Codes
  - name: AgencyCO
    description: Collection of services for Bank agencies (branch code)
  - name: BankCO
    description: Collection of services for Banks (bank identification code)
  - name: GeneralMasterDataCO
    description: Collection of services for General Master data
  - name: LanguageCO
    description: Collection of services for Languages
  - name: NationCO
    description: Collection of services for Nations
  - name: OfficeCO
    description: Collection of services for Company Offices
